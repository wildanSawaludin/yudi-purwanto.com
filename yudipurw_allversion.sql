-- phpMyAdmin SQL Dump
-- version 4.1.8
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Nov 29, 2014 at 12:55 PM
-- Server version: 5.1.73-cll
-- PHP Version: 5.4.23

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `yudipurw_allversion`
--

-- --------------------------------------------------------

--
-- Table structure for table `about`
--

CREATE TABLE IF NOT EXISTS `about` (
  `idabout` int(1) NOT NULL,
  `login_id` int(10) NOT NULL,
  `text` text NOT NULL,
  `images` varchar(100) NOT NULL,
  `twitter` varchar(50) NOT NULL,
  `plus` varchar(50) NOT NULL,
  `github` varchar(50) NOT NULL,
  PRIMARY KEY (`idabout`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `about`
--

INSERT INTO `about` (`idabout`, `login_id`, `text`, `images`, `twitter`, `plus`, `github`) VALUES
(1, 1, 'Product Development at Wahana Mandiri Sydratama', 'http://yudi-purwanto.com/assets/images/str4what.jpg', 'https://twitter.com/str4whatt', 'https://plus.google.com/+yudipurwanto14', 'https://github.com/zhiephie'),
(2, 2, 'your description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com', 'https://plus.google.com', 'https://github.com'),
(3, 3, 'Development', 'http://i1294.photobucket.com/albums/b619/Yudi_Purwanto/IMG_24580163065679_zps385550f7.jpeg', 'https://twitter.com', 'https://plus.google.com', 'https://github.com'),
(4, 4, 'your description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com', 'https://github.com'),
(5, 5, 'your description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com', 'https://github.com'),
(6, 6, 'Member Surabaya Blackhat', 'http://yudi-purwanto.com/assets/images/yudi.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(7, 7, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(8, 8, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(9, 9, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(10, 10, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(11, 11, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(12, 12, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(13, 13, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(14, 14, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(15, 15, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(16, 16, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(17, 17, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(18, 18, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(19, 19, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(20, 20, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(21, 21, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(22, 22, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(23, 23, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(24, 24, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(25, 25, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(26, 26, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(27, 27, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(28, 28, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(29, 29, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(30, 30, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(31, 31, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(32, 32, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(33, 33, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(34, 34, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(35, 35, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(36, 36, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(37, 37, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(38, 38, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(39, 39, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(40, 40, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(41, 41, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(42, 42, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(43, 43, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(44, 44, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/'),
(45, 45, 'Your Description', 'http://yudi-purwanto.com/assets/images/no-image.jpg', 'https://twitter.com/', 'https://plus.google.com/', 'https://github.com/');

-- --------------------------------------------------------

--
-- Table structure for table `category`
--

CREATE TABLE IF NOT EXISTS `category` (
  `idcategory` int(2) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  PRIMARY KEY (`idcategory`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Dumping data for table `category`
--

INSERT INTO `category` (`idcategory`, `name`) VALUES
(1, 'Open Source'),
(2, 'Portfolio');

-- --------------------------------------------------------

--
-- Table structure for table `categorytutorial`
--

CREATE TABLE IF NOT EXISTS `categorytutorial` (
  `idcategorytutorial` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL,
  `slug_cat` varchar(45) NOT NULL,
  PRIMARY KEY (`idcategorytutorial`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=10 ;

--
-- Dumping data for table `categorytutorial`
--

INSERT INTO `categorytutorial` (`idcategorytutorial`, `name`, `slug_cat`) VALUES
(1, 'PHP', 'php'),
(2, 'CSS', 'css'),
(3, 'Javascript', 'javascript'),
(4, 'Database', 'database'),
(5, 'Security', 'security'),
(6, 'Linux', 'linux'),
(7, 'HTML', 'html'),
(8, 'Android', 'android'),
(9, 'Others', 'others');

-- --------------------------------------------------------

--
-- Table structure for table `ci_sessions`
--

CREATE TABLE IF NOT EXISTS `ci_sessions` (
  `session_id` varchar(40) NOT NULL DEFAULT '0',
  `ip_address` varchar(45) NOT NULL DEFAULT '0',
  `user_agent` varchar(120) NOT NULL,
  `last_activity` int(10) unsigned NOT NULL DEFAULT '0',
  `user_data` text NOT NULL,
  PRIMARY KEY (`session_id`),
  KEY `last_activity_idx` (`last_activity`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



--
-- Table structure for table `contact`
--

CREATE TABLE IF NOT EXISTS `contact` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `email` varchar(50) NOT NULL,
  `subject` varchar(100) NOT NULL,
  `message` text NOT NULL,
  `date` int(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `ebook`
--

CREATE TABLE IF NOT EXISTS `ebook` (
  `idebook` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `file` varchar(100) NOT NULL,
  `date` int(20) NOT NULL,
  `counter` int(5) DEFAULT NULL,
  PRIMARY KEY (`idebook`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Dumping data for table `ebook`
--

INSERT INTO `ebook` (`idebook`, `title`, `file`, `date`, `counter`) VALUES
(1, 'CodeIgniter', '1deb90fe814d97e76607beefab23bd7b.pdf', 1404014181, 23),
(2, 'CodeIgniter', 'eeed2f6774efbb9f82c331e02b37a078.pdf', 1404015107, 17),
(3, 'Laravel 4 by brujah', '65a5399975a2ee0fcf30d2a8e0b14f4d.pdf', 1408732867, 10);

-- --------------------------------------------------------

--
-- Table structure for table `file`
--

CREATE TABLE IF NOT EXISTS `file` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `tutorial` varchar(200) DEFAULT NULL,
  `demo` varchar(100) DEFAULT NULL,
  `file` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `file`
--

INSERT INTO `file` (`id`, `title`, `tutorial`, `demo`, `file`) VALUES
(1, 'Check webiste (Online/Offline)', '', 'http://demo.yudi-purwanto.com/check-website', 'e3046b1fce24da39fbf357e47465b1f1.zip');

-- --------------------------------------------------------

--
-- Table structure for table `login`
--

CREATE TABLE IF NOT EXISTS `login` (
  `idlogin` int(100) NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `name` varchar(100) NOT NULL,
  `email` varchar(30) NOT NULL,
  `status` varchar(25) NOT NULL,
  `active` int(1) NOT NULL,
  `kodeactivation` varchar(200) NOT NULL,
  `hit` int(30) NOT NULL,
  PRIMARY KEY (`idlogin`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=46 ;

--
-- Table structure for table `project`
--

CREATE TABLE IF NOT EXISTS `project` (
  `idproject` int(10) NOT NULL AUTO_INCREMENT,
  `idcategory` int(3) NOT NULL,
  `title` varchar(100) NOT NULL,
  `slug` varchar(100) NOT NULL,
  `text` text NOT NULL,
  `image` varchar(100) NOT NULL,
  `date` int(20) DEFAULT NULL,
  `author` int(3) NOT NULL,
  PRIMARY KEY (`idproject`),
  KEY `idcategory_idx` (`idcategory`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=9 ;

--
-- Dumping data for table `project`
--

INSERT INTO `project` (`idproject`, `idcategory`, `title`, `slug`, `text`, `image`, `date`, `author`) VALUES
(1, 2, 'psikolog-anda.com', 'psikolog-andacom', '<p >Cukup klik www.psikolog-anda.com, maka kami siap melayani Anda. www.psikolog-anda.com memberikan jaminan Anda akan dilayani secara pribadi oleh psikolog kami dalam setiap sesi konsultasi, bukan oleh rekan ataupun asisten psikolog.</p>\n\n<p>&nbsp;</p>\n\n <p ><a href="http://psikolog-anda.com/"  target="_blank">&nbsp;psikolog-anda.com</a></p>\n', '12b54f29730f6172f55498dea5e800ff.jpg', 1403572061, 1),
(3, 2, 'Naturally Plus', 'naturally-plus', '<p>Naturally Plus adalah sebuah perusahaan Network Marketing dari Jepang yang telah terbukti memiliki perkembangan paling cepat dalam sejarah Ekonomi Negara Jepang. Pada tahun 2005, Naturally Plus terpilih sebagai &ldquo;<strong>Jepang 10 Terbesar</strong>&nbsp;&rdquo; , yaitu sebagai perusahaan&nbsp;dengan Perkembangan Paling Cepat dalam sejarah perekonomi Negara &nbsp;Jepang&nbsp;di abad ke-21,&nbsp;menduduki posisi ke-4 dari 100.000 perusahaan yang berhasil tanpa ada hutang dengan nilai keuangan&nbsp;<strong>AAA (3A)</strong>&nbsp;, yaitu&nbsp;<strong>setara dengan Sony dan Toyota</strong>&nbsp;.&nbsp;Manajemen yang jujur dan stabilitas keuangan merupakan salah satu fakta yang menunjukkan bahwa suatu perusahaan akan berkembang terus.</p>\n\n <p><a href="http://naturallyplussehat.com/"  target="_blank">naturallyplussehat.com</a></p>\n', '9431cdf290894ca0a30e546ea40195bb.jpg', 1403572149, 1),
(4, 2, 'Percetakan Jakarta', 'percetakan-jakarta', '<p><span >Bergerak dan berpengalaman di dalam bidang percetakan, design centre dan promosi yang meliputi layanan konsep promo, jasa desain layout dan layanan dan percetakan terpadu sampai dengan finishing dengan kualitas layanan prima.</span><br />\n<br />\n<br />\n <a href="http://percetakanjakarta.net/"  target="_blank">percetakanjakarta.net</a></p>\n', '4b6d30ac31068a95cd7f1cf4fbdf0770.jpg', 1403572347, 1),
(5, 2, 'Jawa Trading', 'jawa-trading', '<p>jawatrading.com yang bergerak dalam bidang&nbsp;pertukaran mata uang internasional. Semua transaksi di pasar Forex diadakan berdasarkan asas pertukaran uang bebas, dan Negara tidak campur tangan dalam diadakannya transaksi tukar uang. membantu Anda menjadi jutawan! Ini bukan khayalan ataupun penipuan belaka! Jadikanlah diri Anda sendiri menjadi seorang superior, dan rasakan kebahagiaan dari pilihan Anda yang disertai dengan keberhasilan dan kepuasan.</p>\n\n<p><br />\n <a href="http://jawatrading.com/"  target="_blank">jawatrading.com</a></p>\n', 'a0172629156010c422d57f1d0240ab09.jpg', 1403572417, 1),
(6, 2, 'Arya Forex', 'arya-forex', '<p>aryaforex.com yang bergerak dalam bidang&nbsp;pertukaran mata uang internasional. Semua transaksi di pasar Forex diadakan berdasarkan asas pertukaran uang bebas, dan Negara tidak campur tangan dalam diadakannya transaksi tukar uang. membantu Anda menjadi jutawan! Ini bukan khayalan ataupun penipuan belaka! Jadikanlah diri Anda sendiri menjadi seorang superior, dan rasakan kebahagiaan dari pilihan Anda yang disertai dengan keberhasilan dan kepuasan.</p>\n\n<p><br />\n <a href="http://aryaforex.com/"  target="_blank">aryaforex.com</a></p>\n\n<p>&nbsp;</p>\n', 'f955d02f29c028e1e46a4d0513f11e4a.jpg', 1403572450, 1),
(7, 2, 'PT BMS PROFESIONAL', 'pt-bms-profesional', '<p>PT BMS PROFESIONAL adalah sebuah perusahaan yang bergerak dibidang Jasa Packing atau pengepakan serta pengiriman domestik. Dengan didukung oleh tenaga kerja berpengalaman, terlatih dan&nbsp;profesional&nbsp;kami juga memiliki alat serta armada yang memadai. Komitmen kami adalah memberikan yang terbaik bagi Anda. Kami juga melayani Jasa Pengepakan (Packing) dengan material berstandar Internasional diantaranya adalah : Wooden FullBox, Crates , Packing with Vacuum, Alumunium Foil, Wooden Base Pallet, Shrink Film, Air Buble Pack&nbsp; Styro Foam, Carton Box, Carton Sheet , Tissue Paper, Wraping Paper, dan lain - lain.&nbsp;</p>\n\n <p>Situs web :&nbsp;<a href="http://bms-pro.co.id/"  target="_blank">bms-pro.co.id</a></p>\n', '00262b58da572e95e23375a69faa77a5.jpg', 1403572497, 1),
(8, 2, 'PT. Jaya Kreasi Putra Indonesia', 'pt-jaya-kreasi-putra-indonesia', '<p>PT. Jaya Kreasi Putra Indonesia (JKPINDO), dibentuk pada awal Maret 2007, adalah sebuah badan usaha yang bergerak di bidang Aplikasi dan Integrasi Sistem Komputer.</p>\n\n<p>Meskipun masih sangat muda, JKPINDO dikelola oleh tenaga-tenaga profesional yang sudah berpengalaman di bidangnya dalam menangani Project Management Tehnologi Informasi. Kami percaya bahwa penggunaan sistem komputerisasi memberikan kontribusi yang signifikan untuk kemajuan perusahaan.</p>\n\n<p><strong>VISI</strong><br />\n<br />\nVisi kami adalah menjadi perusahaan IT yang solutif dan mampu membangun serta memberi nilai tambah.</p>\n\n<p><br />\n<strong>MISI</strong></p>\n\n<ul>\n <li>Senantiasa dinamis memenuhi kebutuhan mitra kerja dengan melakukan improvement teknis yang bertujuan untuk mempertahankan serta&nbsp; meningkatkan mutu dan kualitas layanan terbaik.</li>\n <li>Berpartisipasi dan berperan aktif dalam mengembangkan Teknologi Informasi terkini .</li>\n <li>Membangun kemitraan dengan pelanggan dan perusahaan lain berdasarkan prinsip keuntungan bersama.</li>\n</ul>\n\n<p>&nbsp;</p>\n', '7cdbf96933a752a018cfb3554af21056.jpg', 1403572534, 1);

-- --------------------------------------------------------

--
-- Table structure for table `tag`
--

CREATE TABLE IF NOT EXISTS `tag` (
  `idtag` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  PRIMARY KEY (`idtag`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=26 ;

--
-- Dumping data for table `tag`
--

INSERT INTO `tag` (`idtag`, `name`) VALUES
(5, 'virtualhost'),
(6, 'highligter,TinyMCE'),
(7, 'RSS,Feed'),
(8, 'freebie'),
(9, 'Lamp'),
(10, 'RSS,CI'),
(11, 'normalisasi'),
(12, 'Framework,Ultra'),
(13, 'ORM,Ultra,Framework'),
(14, 'PDO'),
(15, 'intel'),
(16, 'Curl,watermarkinput'),
(17, 'curl,website'),
(18, 'curl,website'),
(19, 'curl,website'),
(21, 'laravel,4.3'),
(22, 'laravel,5'),
(23, 'innoDB,myISAM'),
(25, 'Design,Patterns');

-- --------------------------------------------------------

--
-- Table structure for table `tutorial`
--

CREATE TABLE IF NOT EXISTS `tutorial` (
  `idtutorial` int(10) NOT NULL AUTO_INCREMENT,
  `id_category` int(3) DEFAULT NULL,
  `title` varchar(100) NOT NULL,
  `slug` varchar(100) NOT NULL,
  `text` text NOT NULL,
  `image` varchar(100) NOT NULL,
  `tag` varchar(100) NOT NULL,
  `date` int(20) DEFAULT NULL,
  `publish` enum('yes','no') NOT NULL,
  `author` int(3) NOT NULL,
  `counter` int(5) DEFAULT NULL,
  PRIMARY KEY (`idtutorial`),
  UNIQUE KEY `tutorial_fk` (`idtutorial`,`slug`,`title`),
  KEY `fk_tutorial_idx` (`id_category`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=19 ;

--
-- Dumping data for table `tutorial`
--

INSERT INTO `tutorial` (`idtutorial`, `id_category`, `title`, `slug`, `text`, `image`, `tag`, `date`, `publish`, `author`, `counter`) VALUES
(1, 9, 'Cara Membuat Virtual Host di Apache', 'cara-membuat-virtual-host-di-apache', '<div><strong>Virtual Host</strong>&nbsp;adalah salah satu fasilitas di Apache yang bisa kita gunakan untuk mengelola banyak nama domain dengan satu nomor IP saja. Berikut langkah-langkah membuat virtual host yang pernah saya coba ketika saya kerja praktek di salah satu perusahaan di Bandung.&nbsp;</div>\n\n<div>&nbsp;</div>\n\n<div>&nbsp;</div>\n\n<div><strong>Langkah Pertama</strong></div>\n\n<ol>\n <li>Buka file&nbsp;<em>hosts</em>&nbsp;yang ada di alamat&nbsp;&nbsp;<em>C:\\WINDOWS\\system32\\drivers\\etc&nbsp;</em>dan buka hosts</li>\n <li>Di bagian paling bawah tambahkan&nbsp; alamat&nbsp;<em>IP Address localhost&nbsp;</em>127.0.0.1&nbsp; dan nama domain yang dibuat misalnya inventori.com</li>\n</ol>\n\n<p><img alt="" src="http://i1294.photobucket.com/albums/b619/Yudi_Purwanto/hosts_zps509a5329.jpg" /></p>\n\n<div><strong>Langkah Kedua</strong></div>\n\n<ol>\n <li>Buka file&nbsp;<em>httpd.conf</em>&nbsp; yang ada di alamat&nbsp;<em>C:\\xampp\\apache\\conf</em></li>\n <li>Cari bagian&nbsp;<em>Directory</em>&nbsp;dan ubah menjadi seperti dibawah ini<br />\n <br />\n <br />\n <img alt="" src="http://i1294.photobucket.com/albums/b619/Yudi_Purwanto/httpd_zps6f1072c5.jpg" /></li>\n</ol>\n\n<div><strong>Langkah Ketiga</strong></div>\n\n<ol>\n <li>Buka lagi file<em>&nbsp;httpd-vhosts.conf</em>&nbsp; yang ada di alamat<em>C:\\xampp\\apache\\conf\\extra</em></li>\n <li>Tambahkan setingan di bawah ini untuk membedakan website yang dipanggil dengan&nbsp;<em>localhost</em>&nbsp;dan website yang dipanggil dengan&nbsp;<em>virtual host<br />\n <br />\n <img alt="" src="http://i1294.photobucket.com/albums/b619/Yudi_Purwanto/httpd-vhosts_zps576c58a7.jpg" /></em></li>\n</ol>\n\n<div><strong>Tahap Testing</strong></div>\n\n<ol>\n <li>Restart Apache dengan cara : pada XAMPP Control Panel dengan klik tombol&nbsp;<strong><em>stop</em></strong>&nbsp;kemudian klik tombol&nbsp;<em>start</em>.</li>\n <li>Ketikan pada browser&nbsp;<em>http://inventori.com</em></li>\n <li>Ketikan juga pada browser&nbsp;<em>http://localhost/sisfortori</em><br />\n <br />\n Semoga Berhasil<em>..&nbsp;</em>hehe</li>\n</ol>\n', '498936c3d25fc3fa37cdaefa7457e58a.png', 'virtualhost', 1403574245, 'yes', 1, 670),
(2, 1, 'Integrasi Syntax Highlighter di TinyMCE', 'integrasi-syntax-highlighter-di-tinymce', '<p>Sebelum masuk ke dalam tutorial akan saya jelaskan dahulu konsep utama dalam mengintegrasikan syntaxhighlighter. Sebagai text editor, tinyMCE biasanya diletakkan di dalam halaman admin untuk keperluan menulis artikel. Dalam sisi ini, syntaxhighlighter perlu kita tambahkan di dalam menu bar tinyMCE. Artinya, kita perlu menambah plugin syntaxhighlighter tersebut ke dalam folder plugin tinyMCE. Jika sudah berhasil, akan terlihat menu tambahan di dalam menu bar tinyMCE untuk menuliskan source code.</p>\n\n<p>&nbsp;</p>\n\n<p>Penjelasan tersebut merupakan hal yang kita lakukan di sisi admin. Kemudian, untuk menampilkan source code tersebut di halaman artikel, yang kita butuhkan adalah engine utama syntaxhighlighter yang terdiri dari program javascript dan CSS. Sebenarnya fungsi syntaxhighlighter lebih kita khususkan untuk halaman pembaca. Plugin di dalam tinyMCE hanya menuliskan syntax html yang dapat dikenali oleh syntaxhighlighter dan ditampilkan dalam bentuk source code yang sesuai. Oke, langsung kita mulai saja..</p>\n\n<p>Download Plugin syntaxhighlighter untuk tinymce&nbsp;<a href="https://www.dropbox.com/s/ij0p6qo0tgc6mma/syntaxhl.zip">di sini</a></p>\n\n<p>Extract file hasil downloadan tadi di dalam folder &lsquo;plugins&rsquo; tinyMCE. Di dalam inisialisasi tinyMCE, tambahkan plugin dan button &ldquo;syntaxhl&rdquo;, seperti :</p>\n\n<p>Ingat dipengaturan configurasi TinyMCE</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code>tinyMCE.init({\n\n\n     plugins : &quot;pagebreak,syntaxhl,style,table,save,advhr,advimage,advlink,emotions,inlinepopups,insertdatetime,preview,\n\n     media,searchreplace,syntaxhl,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,\n\n     xhtmlxtras,wordcount,advlist&quot;,\n\n    ...\n\n     theme_advanced_buttons1 : &quot;save,syntaxhl,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,\n\n                    justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect,syntaxhl&quot;,\n\n\n});</code></pre>\n\n<pre class="brush: php;fontsize: 100; first-line: 1; ">\nLangkah selanjutnya \n\n Download engine syntaxhighlighter <a href="https://www.dropbox.com/s/rv5efpt0q5tkjid/syntaxhighlighter_2.1.382.zip" target="_blank">di sini </a>\n\nBuat folder &lsquo;js&rsquo; di dalam root aplikasi web Anda. Extract dan letakkan  hasil download tadi di situ.\n</pre>\n\n<pre class="brush: php;fontsize: 100; first-line: 1; ">\nUntuk halaman bacaan artikel ketikkan code  berikut di dalam tag head :</pre>\n\n<pre data-pbcklang="html" data-pbcktabsize="4">\n\n&nbsp;&lt;br /&gt;:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: jscript;fontsize: 100; first-line: 1; &quot;&gt;&lt;span&gt;\n&lt;pre class=&quot;brush: php;fontsize: 100; first-line: 1; &quot;&gt;&lt;pre class=&quot;brush: jscript;fontsize: 100; first-line: 1; &quot;&gt;&amp;lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/styles/shCoreDefault.css&quot;/&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shCore.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushPhp.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushXml.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushCss.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushJscript.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushPlain.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot; src=&quot;&amp;lt;?php echo base_url();?&amp;gt;js/scripts/shBrushSql.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;\n&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;SyntaxHighlighter.all();&amp;lt;/script&amp;gt;&lt;/pre&gt;\n&lt;/pre&gt;\n&lt;/span&gt;&lt;/pre&gt;</pre>\n\n<p>&nbsp;</p>\n\n<pre class="brush: php;fontsize: 100; first-line: 1; ">\nsesuaikan pemanggilan, berhubung Karena menggunakan codeigniter,&nbsp;\n</pre>\n\n<p>&nbsp;</p>\n\n<pre class="brush: php;fontsize: 100; first-line: 1; ">\ncode saya tuliskan dengan mengambil  nilai base url.&nbsp;\n</pre>\n\n<p>&nbsp;</p>\n\n<pre class="brush: php;fontsize: 100; first-line: 1; ">\nJadi, code html artikel yang dihasilkan oleh tinyMCE  tadi akan dibaca oleh engine syntaxhighlighter dan&nbsp;ditampilkan lebih  user-friendly.</pre>\n', '0363cf7a448e9d1903593f9d0a7ca4ef.png', 'highligter,tinymce', 1403575432, 'yes', 1, 502),
(4, 1, 'berbagi source code web blog', 'berbagi-source-code-web-blog', '<p>Selamat pagi, ketemu lagi dengan saya yang keren ini. Langsung saja dech, berhubung kemarin buatin website teman yang buat jasa gitu dan ada fitur blognya sekalian, nah udah jadi dan diupload dia punya ide baru lagi ya saya ngikut aja lah fitur webnya juga cuma profile, about, blog, portfolio dan client emmhh dibuat pakai CodeIgniter 2.1.4, masih sederhana banget ni web, ya dari pada gak jelas di hardisk nangkring nanti lama-lama jadi jamuran seperti saya yang jomblo jamuran..haha curhat dikit, berhubung ini web masih sederhana ya bisa lah dikembangin lagi.<br />\nsekian dari saya .<br />\ndownload di <a href="http://yudi-purwanto.com/assets/file/13320052716willnet.zip" target="_blank">sini</a>.</p>\n', '21afdff074172d2ab822637877fa29a3.jpg', 'freebie', 1403576327, 'yes', 1, 533),
(5, 9, 'Install Lamp Server di ubuntu 14.04', 'install-lamp-server-di-ubuntu-1404', '<p>Install Lamp Server (apache, mariaDB 10.0, php dan phpmyadmin) di ubuntu 14.04</p>\n\n<p>Berhubung saya kemarin muter muter cari gimana cara menginstall Lamp server, ech ketemu juga, tetapi disaat install berjalan dengan lancar dan sesuailah, hehe, namun disaat saya membuat file php untuk mengecek versi phpnya malah diakses not found, aneh bukan, kalau permissionnya kan pasti access forbidden namun permasalahan ini berbeda, hingga saya berfikiran membuat tutorial ini agar untuk saya pribadi tidak lupa akan hal ini dan untuk yang belum tau semoga ini membantu, ilmu baru dari para temen&rdquo; dan akhirnya semua berjalan dengan mulus, oke simak tata cara install yang sudah saya siapkan.</p>\n\n<p>Pertama tama kita install Apache terlebih dahulu</p>\n\n<p>ikuti command berikut :</p>\n\n<p><code>sudo apt-get install apache2</code></p>\n\n<p>tunggu hingga proses installasi selesai.</p>\n\n<p>Dan coba akses <a href="http://localhost/">http://localhost/</a> lihat hasilnya.</p>\n\n<p>Jika anda ingin memakai Mysql anda ikuti command dan paste di terminal</p>\n\n<p><code>sudo apt-get install mysql-server mysql-client</code></p>\n\n<p>Lalu anda akan di minta memasukkan password dan default username adalah &ldquo;root&rdquo;</p>\n\n<p>Karena pembahasan saya mengenai mariaDB ya cukup itu saja mengenai installasi tentang Mysql, semoga sudah ada pandangan sendiri.. hehe</p>\n\n<p>Kenapa memakai MariaDB??? Banyak orang sekarang yang beralih ke MariaDB ya selingkuh gitu lah, haha Karena fiturnya yang di tawarkan menggiurkan siapa sih yang tidak mau berpaling.</p>\n\n<p>MariaDB adalah pengganti binary dari MySQL, dikembangkan oleh penulis asli dari Proyek MySQL dan sepenuhnya kompatibel dengan MySQL memiliki lebih banyak fitur dan peningkatan kinerja yang lebih baik. MariaDB 10,0 Series adalah versi pengembangan (Alpha) dan MariaDB 5.5 jauh stabil untuk di gunakan.</p>\n\n<p>lebih jelasnya langsung saja ke <a href="http://mariadb.org/">http://mariadb.org</a></p>\n\n<p>nah sudah ada pandangankan mau memakai yang mana, sekarang let&#39;s Go.</p>\n\n<p>Cara installasi juga cukup mudah belum ada kendala, haha jadi apakah ada kendala nanti? Ya berdoa saja lah semoga tidak.</p>\n\n<p>Copy dan pastekan di terminal anda</p>\n\n<p><code>sudo apt-get install software-properties-common</code></p>\n\n<p>Lalu</p>\n\n<p><code>sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db</code></p>\n\n<p>setelah itu tambah repository mariaDB 10.0</p>\n\n<p><code>sudo add-apt-repository &#39;deb http://mariadb.biz.net.id//repo/10.0/ubuntu trusty main&#39;</code></p>\n\n<p>setelah itu update</p>\n\n<p><code>sudo apt-get update</code></p>\n\n<p>dan</p>\n\n<p><code>sudo apt-get install mariadb-server</code></p>\n\n<p>dan cek running atau tidaknya mariaDB</p>\n\n<p><code>sudo service mysql status</code></p>\n\n<p>Outpunya</p>\n\n<p><code>* /usr/bin/mysqladmin Ver 9.0 Distrib 5.5.33a-MariaDB, for debian-linux-gnu on i686</code></p>\n\n<p><code>Copyright (c) 2000, 2013, Oracle, Monty Program Ab and others.</code></p>\n\n<p><code>Server version 5.5.33a-MariaDB-1~raring-log</code></p>\n\n<p><code>Protocol version 10</code></p>\n\n<p><code>Connection Localhost via UNIX socket</code></p>\n\n<p><code>UNIX socket /var/run/mysqld/mysqld.sock</code></p>\n\n<p><code>Uptime: 1 min 53 sec</code></p>\n\n<p><code>Threads: 1 Questions: 550 Slow queries: 0 Opens: 314 Flush tables: 4 Open tables: 22 Queries per second avg: 4.867</code></p>\n\n<p>setelah itu install php nya</p>\n\n<p><code>sudo apt-get install php5 php5-mysql libapache2-mod-php5</code></p>\n\n<p>Sekarang tugas anda tinggal buat file bertipe php untuk cek versi phpnya</p>\n\n<p>dengan cara sebagai berikut</p>\n\n<p><code>sudo nano /var/www/html/info.php</code></p>\n\n<p>Pastekan code ini</p>\n\n<p><code>&lt;!--?php</p--&gt; </code></p>\n\n<p><code>&lt;?php</code></p>\n\n<p><code>phpinfo();</code></p>\n\n<p><code>?&gt;</code></p>\n\n<p>dan lalu simpan setelah itu restart</p>\n\n<p>Cek <a href="http://localhost/info.php">http://localhost/info.php</a></p>\n\n<p>apa yang terjadi yang anda lihat itu jawabannya.</p>\n\n<p>Setelah itu install phpmyadmin, udah tau kan kegunaan phpmyadmin jadi saya gak perlu menjelaskan..</p>\n\n<p><code>sudo apt-get install phpmyadmin</code></p>\n\n<p>nanti anda di minta memilih web server apa yang anda gunakan kan udah jelas ditutorial ini web servernya apache jadi pilih apache</p>\n\n<p>masukkan password dan konfirmasi lagi, default username &ldquo;root&rdquo;.</p>\n\n<p>Dan coba akses <a href="http://localhost/phpmyadmin">http://localhost/phpmyadmin</a> dan apa hasilnya NOT FOUND.. loh kenapa begitu yang seperti apa yang saya alami sebelumnya seperti itu jadi harus gimana, ? Tenang solusinya ada, makanya saya buat tutorial ini biar mudah diinget..hehe</p>\n\n<p>Solusinya anda harus menambahkan atau include kan command ini</p>\n\n<p><code>sudo nano /etc/apache2/apache2.conf</code></p>\n\n<p>dan tambah pada baris yang anda kehendaki</p>\n\n<p><code>Include /etc/phpmyadmin/apache.conf</code></p>\n\n<p>lalu restart</p>\n\n<p><code>sudo service apache2 restart</code></p>\n\n<p>dan akses <a href="http://localhost/phpmyadmin">http://localhost/phpmyadmin</a></p>\n\n<p>Secara default phpmyadmin terinstall di usr/share/</p>\n\n<p>anda juga bisa memindahkan ke root direktori var/www/html/, dengan cara</p>\n\n<p><code>sudo ln-s /usr/share/phpmyadmin/ /var/www/html/phpmyadmin</code></p>\n\n<p>Oke sekian tutorial singakat dan sederhana ini, Semoga bermanfaat dan menjawab masalah anda.</p>\n\n<p>&nbsp;</p>\n', '1b12ae147823cfba69f15602bfe9591d.jpg', 'lamp', 1403577732, 'yes', 1, 684),
(6, 1, 'Membuat Rss Di CodeIgniter', 'membuat-rss-di-codeigniter', '<p>Membuat Rss di codeigniter itu gampang gampang susah, susahnya ya yang tidak mengerti. <img alt="laugh" src="http://localhost/purwanto/assets/ckeditor/plugins/smiley/images/teeth_smile.png"  title="laugh" />, lain halnya dengan wordpress dan yang lain, yang sudah disiapkan semuanya, ya pintar pintarnya kita mengolahnya.</p>\n\n<p>tapi saya orangnya itu tak mau yang instant, cie..haha</p>\n\n<p>itung itung buat belajar agar tidak selalu puas dengan skill yang ada saat ini.</p>\n\n<p>okeh, mari kita mulai membuat model terlebih dahulu.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php if ( ! defined(&#39;BASEPATH&#39;)) exit(&#39;No direct script access allowed&#39;);\nclass rss_model extends CI_Model\n{\n public function __construct()\n {\n  parent::__construct();\n }\n\n function get_posts($count)\n {\n  $query = $this-&gt;db-&gt;get(&#39;tutorial&#39;, $count)-&gt;result();\n  return $query;\n }\n \n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Penjelasan sedikit didalam rss_model, dan saya mengunakan nama tabel tutorial.</p>\n\n<p>sekarang kita akan membuat sebuah controller yang menghubungkan model dan view nanti.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php if ( ! defined(&#39;BASEPATH&#39;)) exit(&#39;No direct script access allowed&#39;);\nclass Rss extends CI_Controller{\n\n public function __construct() {\n  parent::__construct();\n  $this-&gt;load-&gt;helper(array(&#39;xml&#39;,&#39;text&#39;));\n  $this-&gt;load-&gt;model(&#39;rss_model&#39;);\n    }\n \n public function index() {\n\n  $data = array(\n   &#39;encoding&#39;    =&gt; &#39;utf-8&#39;,\n   &#39;feed_name&#39;   =&gt; &#39;Blog Yudi Purwanto&#39;,\n   &#39;feed_url&#39;    =&gt; &#39;http://www.yudi-purwanto.com/rss/&#39;,\n   &#39;page_description&#39;  =&gt; &#39;yudi-purwanto.com, Hanya tulisan seeorang web development biasa yang ingin berbagi ala kadarnya.&#39;,\n   &#39;page_language&#39;  =&gt; &#39;en-ca&#39;,\n   &#39;creator_email&#39;  =&gt; &#39;purwantoyudi42@gmail.com&#39;,\n   &#39;posts&#39;    =&gt; $this-&gt;rss_model-&gt;get_posts(10)\n  );\n\n  $this-&gt;load-&gt;view(&#39;rss&#39;,$data);\n  header(&quot;Content-Type: application/rss+xml&quot;);\n }\n}\n\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Sekirannya begitu, bisa kalian sesuaikan selebihnya, semoga bisa memahaminya.</p>\n\n<p>Sekarang kita tinggal membuat tampilan viewnya, cukup mudah, buat sebuah file dengan nama rss.php dan taruh di views.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\n echo &#39;&lt;?xml versi encoding=&quot;utf-8&quot;?&gt;&#39; . &quot;\\n&quot;;\n?&gt;\n &lt;rss versi\nxmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot;\nxmlns:sy=&quot;http://purl.org/rss/1.0/modules/syndication/&quot;\nxmlns:admin=&quot;http://webns.net/mvcb/&quot;\nxmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\nxmlns:media=&quot;http://search.yahoo.com/mrss/&quot;\n xmlns:c\n\n \n &lt;channel&gt;\n  &lt;title&gt;&lt;?php echo $feed_name; ?&gt;&lt;/title&gt;\n  &lt;link&gt;&lt;?php echo $feed_url; ?&gt;&lt;/link&gt;\n  &lt;description&gt;&lt;?php echo $page_description; ?&gt;&lt;/description&gt;\n  &lt;dc:language&gt;&lt;?php echo $page_language; ?&gt;&lt;/dc:language&gt;\n  &lt;dc:creator&gt;&lt;?php echo $creator_email; ?&gt;&lt;/dc:creator&gt;\n    \n  &lt;dc:rights&gt;Copyright &lt;?php echo gmdate(&quot;Y&quot;, time()); ?&gt;&lt;/dc:rights&gt;\n  &lt;admin:generatorAgent rdf:resource=&quot;http://www.yudi-purwanto.com/&quot; /&gt;\n\n  &lt;?php foreach($posts as $row):?&gt;\n   $date = generate_tanggal($value-&gt;date);\n   &lt;item&gt;\n    &lt;title&gt;&lt;?php echo $row-&gt;title; ?&gt;&lt;/title&gt;\n    &lt;link&gt;&lt;?php echo site_url(&quot;show/detail/&quot;.$row-&gt;slug); ?&gt;&lt;/link&gt;\n    &lt;pubDate&gt;&lt;?php echo $date;?&gt;&lt;/pubDate&gt;\n    &lt;description&gt;\n     &lt;![CDATA[\n      &lt;div&gt; &lt;?php echo character_limiter($row-&gt;text, 200); ?&gt;&lt;/div&gt;\n      &lt;p&gt;This article is copyright &amp;copy; &lt;?php echo date(&#39;Y&#39;); ?&gt;&amp;nbsp; &lt;a href=&quot;http://www.yudi-purwanto.com&quot;&gt;yudi-purwanto.com&lt;/a&gt;&lt;/p&gt;\n     ]]&gt;\n    &lt;/description&gt;\n   &lt;/item&gt;\n\n  &lt;?php endforeach; ?&gt;\n\n &lt;/channel&gt;\n&lt;/rss&gt;</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Oke cukup sekian tutorial yang singkat ini semoga membantu.</p>\n', '9729313073fa11143dd3ba078412b0b1.jpg', 'rss,ci', 1403606365, 'yes', 1, 402),
(7, 9, 'Model konseptual Database', 'model-konseptual-database', '<p>Oke, saya akan membahas tentang rancangan konseptual database, langsung simak tutorial kali ini.</p>\n\n<p>Pada perancangan konseptual penekanan tinjauan dilakukan pada struktur data dan relasi antar file.</p>\n\n<p>Tidak perlu dipikirkan tentang terapan dan operasi dalam database, terdapat dua buah teknik</p>\n\n<ol>\n <li>Teknik Normalisasi</li>\n <li>Teknik ERD</li>\n</ol>\n\n<p><u>Normalisasi</u></p>\n\n<p>Proses pengelompokan data elemen menjadi tabel-tabel yang menunjukkan entity dan relasinya. pada proses normalisasi selalu diuji beberapa kondisi,</p>\n\n<p>Apakah ada kesulitan pada saat Insert, Delete, Update dan Retrieve, Jika memang terdapat kesulitan pada tahan itu maka relasi perlu dipecah lagi.</p>\n\n<p><u>Kebergantungan Fungsional</u></p>\n\n<p>Diberikan sebuah relasi R, atribut Y pada R, bergantung fungsional pada antribut X pada R setiap nilai X dalam R punya hubungan dengan tepat satu nilai Y dalam R.</p>\n\n<p><u>Bentuk Normalisasi</u></p>\n\n<ul>\n <li>Unnormalized</li>\n <li>Normal kesatu (1NF)</li>\n <li>Normal kedua (2NF)</li>\n <li>Normal ketiga (3NF)</li>\n <li>BCNF</li>\n</ul>\n\n<p><u>Kebergantungan Fungsional (Functional Dependency)</u></p>\n\n<p>Dibentuk sebuah relasi R, atribut Y dan R adalah bergantung sampai pada atribut X dan R jika dan hanya jika setiap nilai X dan R punya hubungan dengan tepat satu nilai Y dalam R.</p>\n\n<p><u>Penerapan</u></p>\n\n<p>PT. YP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Faktur pembelian Barang</p>\n\n<p>Jln. Xyz</p>\n\n<p><u>Jakarta</u></p>\n\n<p>Kode Supplier : G01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Tanggal : 07/02/90</p>\n\n<p>Nama Supplier : Yudi Purwanto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nomor : 998</p>\n\n<table border="1" cellpadding="1" cellspacing="1">\n <tbody>\n  <tr>\n   <td>Kode</td>\n   <td>Nama Barang</td>\n   <td>QTY</td>\n   <td>Harga</td>\n   <td>Jumlah</td>\n  </tr>\n  <tr>\n   <td>A01</td>\n   <td>Ac Split &frac12; pk</td>\n   <td>10.0</td>\n   <td>1.350.000</td>\n   <td>1.350.000,-</td>\n  </tr>\n  <tr>\n   <td>A02</td>\n   <td>Ac Split 1 pk</td>\n   <td>10.0</td>\n   <td>2.000.000</td>\n   <td>2.000.000,-</td>\n  </tr>\n  <tr>\n   <td colspan="3" rowspan="2">&nbsp;</td>\n   <td>Total Faktur</td>\n   <td>33.500.000</td>\n  </tr>\n  <tr>\n   <td>Jatuh tempo Faktur</td>\n   <td>09/03/90</td>\n  </tr>\n </tbody>\n</table>\n\n<p><u>Langkah 1 : Bentuk Unnormalized</u></p>\n\n<p>&nbsp;</p>\n\n<table border="1" cellpadding="4" cellspacing="0">\n <tbody>\n  <tr>\n   <td>\n   <p>No faktur</p>\n   </td>\n   <td>\n   <p>Kode suppl</p>\n   </td>\n   <td>\n   <p>Nama suppl</p>\n   </td>\n   <td>\n   <p>Kode brg</p>\n   </td>\n   <td>\n   <p>Nama brg</p>\n   </td>\n   <td>\n   <p>Tgl</p>\n   </td>\n   <td>\n   <p>Jatuh tempo</p>\n   </td>\n   <td>\n   <p>Qty</p>\n   </td>\n   <td>\n   <p>Harga</p>\n   </td>\n   <td>\n   <p>Jumlah</p>\n   </td>\n   <td>\n   <p>Total</p>\n   </td>\n  </tr>\n  <tr>\n   <td>\n   <p>112</p>\n   </td>\n   <td>\n   <p>S02</p>\n   </td>\n   <td>\n   <p>Hitachi</p>\n   </td>\n   <td>\n   <p>R01</p>\n   </td>\n   <td>\n   <p>Race Cooker</p>\n   </td>\n   <td>\n   <p>02/02/90</p>\n   </td>\n   <td>\n   <p>09/03/90</p>\n   </td>\n   <td>\n   <p>10</p>\n   </td>\n   <td>\n   <p>150.000</p>\n   </td>\n   <td>\n   <p>1.500.000</p>\n   </td>\n   <td>\n   <p>1500000</p>\n   </td>\n  </tr>\n  <tr>\n   <td>\n   <p>132</p>\n   </td>\n   <td>\n   <p>G01</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>R02</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n   <td>\n   <p>&nbsp;</p>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p>Untuk langkah selanjutnya adalah 1NF, dimana anda hanya mengisi bagian yang kosong atau belum terisi.</p>\n\n<p>Langkah 2 : 2NF</p>\n\n<p>Carilah calon kunci(key) dari 1NF</p>\n\n<ul>\n <li>No factur</li>\n <li>Kode Supplier</li>\n <li>Kode Barang</li>\n</ul>\n\n<p>Pecah menjadi 3 bagian atau 3 tabel</p>\n\n<p><u>Tabel Supplier </u></p>\n\n<ul>\n <li><u>Kode Supplier</u> (pk)</li>\n <li>Nama Supplier</li>\n</ul>\n\n<p><u>Tabel Nota</u></p>\n\n<ul>\n <li><u>No Nota</u> (pk)</li>\n <li>Tanggal</li>\n <li>Tempo</li>\n <li>QTY</li>\n <li>Harga</li>\n <li>Total</li>\n <li>Kode Supplier (fk)</li>\n <li>Kode Barang (fk)</li>\n</ul>\n\n<p><u>Tabel Barang</u></p>\n\n<ul>\n <li><u>Kode Barang (pk)</u></li>\n <li>Nama Barang</li>\n</ul>\n\n<p>Sedikit penjelasan (pk) adalah sebuah primary key dan (fk) adalah foreign key</p>\n\n<blockquote>\n<p>Catatan : Insert, Update, Delete dan Retrieve, tidak ada masalah, namun pada tabel NOTA QTY dan Harga tidak sepenuhnya bergantung pada <u>No nota</u> (pk), tetapi juga bergantung pada kode barang ini sering disebut <u>kebergantungan transitif</u>, ini perlu dilakukan pemecahan menjadi dua tabel lagi.</p>\n</blockquote>\n\n<p>Langkah ke 3 : Bentuk 3NF</p>\n\n<p>Bentuk normal ketiga mempunya syarat setiap tabel tidak mempunya field yang bergantung transitif, harus bergantung penuh pada kunci utama (pk).</p>\n\n<p><u>Tabel Supplier</u></p>\n\n<ul>\n <li><u>Kode Supplier (pk)</u></li>\n <li>Nama Supplier</li>\n</ul>\n\n<p><u>Tabel Barang</u></p>\n\n<ul>\n <li><u>kode Barang (pk)</u></li>\n <li>Nama Barang</li>\n</ul>\n\n<p><u>Tabel Nota</u></p>\n\n<ul>\n <li><u>No Nota (pk)</u></li>\n <li>Tanggal</li>\n <li>Tempo</li>\n <li>Total</li>\n <li>Kode Supplier (fk)</li>\n</ul>\n\n<p><u>Tabel Transaksi barang</u></p>\n\n<ul>\n <li>No nota (fk)</li>\n <li>Kode barang (fk)</li>\n <li>QTY</li>\n <li>Harga</li>\n</ul>\n\n<p>Untuk langkah selanjutnya adalah langkah ke 5 : Implementasi</p>\n\n<p>Cara cukup mudah hanya membuatnya berelasi satu sama lain, bisa dilihat dilangkah sebelumnya, semoga sudah jelas dan bisa anda terpakan.</p>\n', '96b9b7c3082f2fb1ad25e767e35d2390.png', 'normalisasi', 1403662275, 'yes', 1, 312),
(8, 1, 'Framework MVC (Ultra Framework)', 'framework-mvc-ultra-framework', '<p>Kali ini saya akan membagikan sebuah framework ala yudi purwanto yang saya berinama Ultra Framework. Ya gara-gara iseng aja sebenarnya.</p>\n\n<p>Aplikasi yang dibuat sangat sederhana namun memungkinkan kita untuk memahami cara kerjanya.</p>\n\n<p>Ingat framework ini masih cukup sederhana dan sangat sederhana menurut saya sendiri karena iseng, lagi lagi iseng alasannya :D . tapi tidak ada salahnya saya berbagi dan bisa memudahkan pekerjaan anda, hobby anda dalam hal codding dan lain sebagainya. Yang pastinya ini Open Source jadi kembangkan sesuai kemampuan dan skill anda.</p>\n\n<p>MVC pada awalnya banyak digunakan dalam aplikasi GUI dekstop, tetapi saat ini dengan perkembangan dan kematangan bahasa pemrograman web, bermunculanlah beberapa framework yang menggunakan arsitektur ini.</p>\n\n<p><strong>MVC</strong>, singkatnya adalah cara yang efisien, bersih dan cepat untuk memisahkan kode program dari kode HTML, atau antar muka lain yang kita pilih.</p>\n\n<p>MVC berarti, <em><strong>Model &ndash; View &ndash; Controller</strong></em>.</p>\n\n<p><em><strong>Model</strong></em>: bertanggungjawab terhadap pengelolaan data seperti SQL databases dan operasi SELECT, UPDATE, DELETE,dsb, dst, dll</p>\n\n<p><em><strong>View:</strong></em> menampilkan antarmuka (UI), html, css, javascript dan sebagainya</p>\n\n<p><em><strong>Controller</strong></em>: Jantung dan otak dari arsitektur MVC, tempat semua request masuk, <em><strong>controller</strong></em> adalah yang menjembatani antara <em><strong>view</strong></em> dan <em><strong>model</strong></em>.</p>\n\n<p><u><em>Ultra Framework ini menggunakan Default Driver Database PDO</em></u></p>\n\n<p>Disini akan saya berikan Dokumentasi dan cara penggunaan Framework ini.</p>\n\n<ol>\n <li>\n <p>Langkah pertama download file yang ada di github atau bisa melalui composer kesayangan anda.</p>\n </li>\n</ol>\n\n<p>Kalau belum ada ya install dulu ya. Cari di google.</p>\n\n<ol start="2">\n <li>\n <p>langkah kedua konfigurasi di Database.php yang ada dalam root dir/base/Database.php</p>\n </li>\n</ol>\n\n<p>Setting nama semua yang ada di Database.php sesuaikan kebutuhan.</p>\n\n<p>Seperti Host, Database, User, Password dan url</p>\n\n<p><strong>Penjelasan </strong></p>\n\n<ul>\n <li>\n <p>Host : nama host ( eg: localhost )</p>\n </li>\n <li>\n <p>Database : nama database ( eg: ultra )</p>\n </li>\n <li>\n <p>User : Nama user ( eg: root )</p>\n </li>\n <li>\n <p>Password : Password ( eg: root )</p>\n </li>\n <li>\n <p>url : Nama url root site (eg: http:://domain.com / http://localhost/folder)</p>\n </li>\n</ul>\n\n<p>Ingat url disini harus ada slash ( / ) diakhir url anda.</p>\n\n<p>Oke kita masuk ketahap penggunaannya.</p>\n\n<p>Disini saya memberikan contoh penggunaan dengan database.</p>\n\n<p>Secara default sudah bisa berjalan dengan lancar jika diakses <a href="http://domain.com/">http://domain.com</a> atau <a href="http://localhost/folder">http://localhost/folder</a> dan dicontrollers sudah ada file indexController.php dan testController.php.</p>\n\n<p>Buat sebuah database dengan apa saja.</p>\n\n<p>Lalu buat sebuah tabel dengan nama books</p>\n\n<pre data-pbcklang="sql" data-pbcktabsize="4">\n<code>CREATE TABLE IF NOT EXISTS `books` (\n`id` int(11) NOT NULL,\n  `author` int(11) NOT NULL,\n  `title` varchar(70) NOT NULL,\n  `isbn` varchar(20) DEFAULT NULL,\n  `publisher` varchar(30) NOT NULL,\n  `year` int(4) NOT NULL,\n  `summary` text,\n  `coverMime` varchar(20) DEFAULT NULL,\n  `coverImage` blob,\n  `copies` tinyint(4) NOT NULL DEFAULT &#39;1&#39;\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;\n\n\nINSERT INTO `books` (`id`, `author`, `title`, `isbn`, `publisher`, `year`, `summary`, `coverMime`, `coverImage`, `copies`) VALUES\n(1, 1, &#39;Creating your MySQL Database: Practical Design Tips and\\r\\nTechniques&#39;, &#39;1904811302&#39;, &#39;Packt Publishing Ltd&#39;, 2006, &#39;A short guide for everyone on how to structure your data and\\r\\nset-up your MySQL database tables efficiently and easily.&#39;, NULL, NULL, 1),\n(2, 2, &#39;ImageMagick Tricks&#39;, &#39;1904811868&#39;, &#39;Packt Publishing\\r\\nLtd&#39;, 2006, &#39;Unleash the power of ImageMagick with this fast, friendly\\r\\ntutorial, and tips guide&#39;, NULL, NULL, 1),\n(3, 3, &#39;Building Websites with Plone&#39;, &#39;1904811027&#39;, &#39;Packt\\r\\nPublishing Ltd&#39;, 2004, &#39;An in-depth and comprehensive guide to the Plone content\\r\\nmanagement system&#39;, NULL, NULL, 1);</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Model</strong></p>\n\n<p>Pembuatan model sangat mudah sebagai contoh seperti dibawah ini</p>\n\n<p>Buat sebuah file didalam folder models dengan nama SiteModel.php dengan nama tabel books didatabase, terlebih dahulu setting Database.php di base/Database.php</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code>&lt;!--?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link   : http://yudi-purwanto.com\n *  @since  : 14 May 2014\n *  File    : SiteModel.php\n *  \n * \n **************************************/\nclass SiteModel extends Model\n{\n public function getBooks()\n {\n  $list = $this---&gt;db-&gt;query(&quot;SELECT * FROM books&quot;);\n  return $list-&gt;fetchall( PDO::FETCH_OBJ );\n }\n}\n\n/* End of file SiteModel.php */\n/* Location: ./models/SiteModel.php */</code></pre>\n\n<blockquote>\n<p><em>Note : Untuk load sebuah model didalam sebuah controller dengan cara :</em></p>\n\n<p><em>$this-&gt;loadModel(&#39;NamaModel&#39;);</em></p>\n\n<p><em>Contoh : $this-&gt;loadModel(&#39;Site&#39;);</em></p>\n</blockquote>\n\n<p><strong>Controller</strong></p>\n\n<p>Kita bahas membuat sebuah controller disini saya contohkan testController.php yang mana sudah ada didalam folder controllers, nanti anda bisa mengakses <a href="http://localhost/folder/test">http://localhost/folder/test</a></p>\n\n<p>Membuat sebuah controller, sebagai contoh :</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code>&lt;!--?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link     : http://yudi-purwanto.com\n *  @since   : 14 May 2014\n *  File         : testController.php\n *  \n * \n **************************************/\nclass testController extends Controller\n{   \n    //<-- * Index Error * -----&gt;\n    public function index() {\n        header (&#39;HTTP/1.0 404 Not Found&#39;);\n        include &#39;public/error/404.php&#39;; // Show Error 404\n    }\n\n    public function test()\n    {\n     $output = $this-&gt;loadModel(&#39;Site&#39;);\n     $this-&gt;view-&gt;title = &quot;Testing controller&quot;;\n     $this-&gt;view-&gt;list = $output-&gt;getBooks();\n  /* Show Views */\n        $this-&gt;view-&gt;render(&#39;index&#39;, null);\n    }\n}\n\n/* End of file indexController.php */\n/* Location: ./controllers/indexController.php */</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>View</strong></p>\n\n<p>View, seperti halnya membuat sebuah Model dan Controller, langsung saja kita ke langkah pembuatannya dari pembuatan Model dan Controller kita akan menampilkan dengan view ini. Simak contoh berikut.</p>\n\n<blockquote>\n<p><em><u>Exstensi file view adalah .phtml jadi setiap membuat view dengan exstensi phtml</u></em></p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;&lt;?php echo $this-&gt;title; ?&gt;&lt;/title&gt;\n &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;?php echo $layout[&#39;css&#39;]; ?&gt;bootstrap.min.css&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;container&quot;&gt;\n\n&lt;nav class=&quot;navbar navbar-inverse&quot;&gt;\n &lt;div class=&quot;navbar-header&quot;&gt;\n  &lt;a class=&quot;navbar-brand&quot; href=&quot;&lt;?php echo url; ?&gt;&quot;&gt;Crud&lt;/a&gt;\n &lt;/div&gt;\n&lt;/nav&gt;\n&lt;h1&gt;All Data&lt;/h1&gt;\n\n&lt;table class=&quot;table table-striped table-bordered&quot;&gt;\n &lt;thead&gt;\n  &lt;tr&gt;\n  &lt;td&gt;Author and Title&lt;/td&gt;\n  &lt;td&gt;ISBN&lt;/td&gt;\n  &lt;td&gt;Publisher&lt;/td&gt;\n  &lt;td&gt;Year&lt;/td&gt;\n  &lt;td&gt;Summary&lt;/td&gt;\n  &lt;td&gt;Copies&lt;/td&gt;\n  &lt;/tr&gt;\n &lt;/thead&gt;\n &lt;tbody&gt;\n  &lt;?php\n  $data = $this-&gt;list;\n  foreach($data as $value):\n  ?&gt;\n  &lt;tr&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;title; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;isbn; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;publisher; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;year; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;summary; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;copies; ?&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;?php endforeach ?&gt;\n &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>Router</strong></p>\n\n<p>Pada dasarnya jika anda membuat sebuah Controller, anda harus mendaftarkan ke router.php</p>\n\n<p>di base/Router.php, dengan cara sebagai berikut.</p>\n\n<p>Perhatikan baik baik, bisa dibilang susah susah gampang disaat mendaftarkan controller ke router.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code>&lt;!--?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link   : http://yudi-purwanto.com\n *  @since  : 14 May 2014\n *  File    : Router.php\n *  \n * \n **************************************/\nclass Router\n{\n    private $_controller;\n    private $_method;\n    \n    public function __construct() {\n        $page        = $_GET[''test''];   // mengambil test didalam htaccess\n\n        /* function method controller */\n        $staticPages = array(\n                        ''test''\n        );\n\n        //<-- *  Pages Default * ----&gt;\n        if( !in_array( $page, $staticPages ) \n            &amp;&amp; isset( $page ) \n        ) {\n             $this-&gt;_c $page );\n            $this-&gt;_method     = strtolower( $page );\n            \n        }\n        //&lt;--- ************* Pages ********* ---&gt;\n        else if( isset( $page ) \n                &amp;&amp; in_array( $page, $staticPages )\n        ) {\n            //load controller name adalah test = load folder name test in views, jadi harus sama\n             $this-&gt;_c\n            $this-&gt;_method     = strtolower( $page );\n        }\n\n        //&lt;-- * if no have variables defined $ _GET showed index * --&gt;\n        if( !$this-&gt;_controller ) {\n             $this-&gt;_c\n        }\n        \n        if( !$this-&gt;_method ) {\n            $this-&gt;_method = &#39;index&#39;;\n        }\n        \n    } //&lt;--- * End * --&gt;\n    \n    public function getController() {\n        return $this-&gt;_controller;\n    }\n    \n    public function getMethod() {\n        return $this-&gt;_method;\n    }\n \n} //&lt;-- * End Class * --&gt;\n\n/* End of file Router.php */\n/* Location: ./base/Router.php */</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Untuk file htaccessnya anda bisa menambahkan seperti ini :</p>\n\n<p># Test</p>\n\n<p>RewriteRule ^([a-zA-Z0-9-_]+)$ index.php?test=$1 [QSA,L]</p>\n\n<p>Download <a href="https://github.com/zhiephie/ultra-framework/tree/master" target="_blank">disini</a></p>\n\n<p>Demo <a href="http://yudi-purwanto.com/ultra" target="_blank">disini</a></p>\n\n<p><strong>SELAMAT MENCOBA...!!!</strong></p>\n', '7539bc3e895adad24a0c0a8fe58a8ad8.png', 'framework,ultra', 1403745937, 'yes', 1, 442),
(9, 1, 'Framework (Ultra Framework ORM)', 'framework-ultra-framework-orm', '<p>Kali ini saya akan membagikan sebuah framework ala yudi purwanto yang saya berinama Ultra Framework Versi ORM. Dari yang sebelumnya belum mendukung ORM.</p>\n\n<p>Aplikasi yang dibuat sangat sederhana namun memungkinkan kita untuk memahami cara kerjanya.</p>\n\n<p><strong>Object Relaional Mapping(ORM) : </strong>Salah satu teknik memetakkan basisdata relational ke model object.</p>\n\n<p><strong>MVC</strong> pada awalnya banyak digunakan dalam aplikasi GUI dekstop, tetapi saat ini dengan perkembangan dan kematangan bahasa pemrograman web, bermunculanlah beberapa framework yang menggunakan arsitektur ini.</p>\n\n<p><strong>MVC</strong>, singkatnya adalah cara yang efisien, bersih dan cepat untuk memisahkan kode program dari kode HTML, atau antar muka lain yang kita pilih.</p>\n\n<p>MVC berarti, <em><strong>Model &ndash; View &ndash; Controller</strong></em>.</p>\n\n<p><em><strong>Model</strong></em>: bertanggungjawab terhadap pengelolaan data seperti SQL databases dan operasi SELECT, UPDATE, DELETE,dsb, dst, dll</p>\n\n<p><em><strong>View:</strong></em> menampilkan antarmuka (UI), html, css, javascript dan sebagainya</p>\n\n<p><em><strong>Controller</strong></em>: Jantung dan otak dari arsitektur MVC, tempat semua request masuk, <em><strong>controller</strong></em> adalah yang menjembatani antara <em><strong>view</strong></em> dan <em><strong>model</strong></em>.<br />\n&nbsp;</p>\n\n<p><em><u>Ultra Framework versi ORM ini menggunakan Default Driver Mysql tetapi tidak menutup kemungkinan tidak bisa menggunakan Sqlite dan Postgres, Itu jelas salah tentu saja bisa.</u></em></p>\n\n<p>&nbsp;</p>\n\n<p>Disini akan saya berikan Dokumentasi dan cara penggunaan Framework Versi ini.</p>\n\n<ol>\n <li>\n <p>Langkah pertama download file yang ada di github.</p>\n </li>\n <li>\n <p>langkah kedua konfigurasi di Config.php yang ada dalam root dir/base/Config.php</p>\n </li>\n</ol>\n\n<p>Setting nama semua yang ada di Config.php sesuaikan kebutuhan.</p>\n\n<p>Seperti Host, Database, User, Password dan url</p>\n\n<p><strong>Penjelasan </strong></p>\n\n<p>Jika anda menggunakan Mysql isi bagian mysql, tetapi jika anda menggunakan Sqlite atau Postgres</p>\n\n<p>hapus comment Configurasi dari masing masing Driver.</p>\n\n<p>Untuk pengaturan Congfigurasi yang lain Di App.php yang berada di base/App.php</p>\n\n<p>&nbsp;</p>\n\n<p>Oke kita masuk ketahap penggunaannya.</p>\n\n<p>Disini saya memberikan contoh penggunaan dengan database.</p>\n\n<p>Karena saat ini dalam contoh menggunakan Mysql jadi Setting di Config.php seperti berikut :</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">ORM::configure(&#39;mysql:host=localhost; dbname=perpustakaan&#39;);\nORM::configure(&#39;username&#39;, &#39;root&#39;);\nORM::configure(&#39;password&#39;, &#39;1&#39;);</code></pre>\n\n<p>Secara default sudah bisa berjalan dengan lancar jika diakses <a href="http://domain.com/">http://domain.com</a> atau <a href="http://localhost/folder">http://localhost/folder</a> dan dicontrollers sudah ada file indexController.php dan testController.php.</p>\n\n<p>Buat sebuah database dengan nama perpustakaan</p>\n\n<p>Lalu buat sebuah tabel dengan nama books</p>\n\n<pre data-pbcklang="sql" data-pbcktabsize="4">\n<code class="language-sql ">CREATE TABLE IF NOT EXISTS `books` (\n`id` int(11) NOT NULL,\n  `author` int(11) NOT NULL,\n  `title` varchar(70) NOT NULL,\n  `isbn` varchar(20) DEFAULT NULL,\n  `publisher` varchar(30) NOT NULL,\n  `year` int(4) NOT NULL,\n  `summary` text,\n  `coverMime` varchar(20) DEFAULT NULL,\n  `coverImage` blob,\n  `copies` tinyint(4) NOT NULL DEFAULT &#39;1&#39;\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;\n\n\n\nINSERT INTO `books` (`id`, `author`, `title`, `isbn`, `publisher`, `year`, `summary`, `coverMime`, `coverImage`, `copies`) VALUES\n(1, 1, &#39;Creating your MySQL Database: Practical Design Tips and\\r\\nTechniques&#39;, &#39;1904811302&#39;, &#39;Packt Publishing Ltd&#39;, 2006, &#39;A short guide for everyone on how to structure your data and\\r\\nset-up your MySQL database tables efficiently and easily.&#39;, NULL, NULL, 1),\n(2, 2, &#39;ImageMagick Tricks&#39;, &#39;1904811868&#39;, &#39;Packt Publishing\\r\\nLtd&#39;, 2006, &#39;Unleash the power of ImageMagick with this fast, friendly\\r\\ntutorial, and tips guide&#39;, NULL, NULL, 1),\n(3, 3, &#39;Building Websites with Plone&#39;, &#39;1904811027&#39;, &#39;Packt\\r\\nPublishing Ltd&#39;, 2004, &#39;An in-depth and comprehensive guide to the Plone content\\r\\nmanagement system&#39;, NULL, NULL, 1);</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Model</strong></p>\n\n<p>Pembuatan model sangat mudah sebagai contoh seperti dibawah ini</p>\n\n<p>Buat sebuah file didalam folder models dengan nama SiteModel.php dengan nama tabel books,</p>\n\n<p>terlebih dahulu setting Configurasi database.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link   : http://yudi-purwanto.com\n *  @since  : 14 May 2014\n *  File    : SiteModel.php\n *  \n * \n **************************************/\nclass SiteModel extends Model\n{\n public function getBooks()\n {\n  $list = ORM::table(&#39;books&#39;)-&gt;find_many();\n  return $list;\n }\n}\n\n/* End of file SiteModel.php */\n/* Location: ./models/SiteModel.php */</code></pre>\n\n<blockquote>\n<p><em>Note : Untuk load sebuah model didalam sebuah controller dengan cara :</em></p>\n\n<p><em>$this-&gt;loadModel(&#39;NamaModel&#39;);</em></p>\n\n<p><em>Contoh : $this-&gt;loadModel(&#39;Site&#39;);</em></p>\n</blockquote>\n\n<p><strong>Controller</strong></p>\n\n<p>Kita bahas membuat sebuah controller disini saya contohkan testController.php yang mana sudah ada didalam folder controllers, nanti anda bisa mengakses <a href="http://localhost/folder/test">http://localhost/folder/test</a></p>\n\n<p>Membuat sebuah controller, sebagai contoh :</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link     : http://yudi-purwanto.com\n *  @since   : 14 May 2014\n *  File         : testController.php\n *  \n * \n **************************************/\nclass testController extends Controller\n{   \n    //&lt;-- * Index Error * ---&gt;\n    public function index() {\n        header (&#39;HTTP/1.0 404 Not Found&#39;);\n        include &#39;public/error/404.php&#39;; // Show Error 404\n    }\n\n    public function test()\n    {\n     $output = $this-&gt;loadModel(&#39;Site&#39;);\n     $this-&gt;view-&gt;title = &quot;Testing controller&quot;;\n     $this-&gt;view-&gt;list = $output-&gt;getBooks();\n  /* Show Views */\n        $this-&gt;view-&gt;render(&#39;index&#39;, null);\n    }\n}\n\n/* End of file indexController.php */\n/* Location: ./controllers/indexController.php */</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>View</strong></p>\n\n<p>View, seperti halnya membuat sebuah Model dan Controller, langsung saja kita ke langkah pembuatannya dari pembuatan Model dan Controller kita akan menampilkan dengan view ini. Simak contoh berikut.</p>\n\n<p><em><u>Exstensi file view adalah .phtml jadi setiap membuat view dengan exstensi phtml</u></em></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;&lt;?php echo $this-&gt;title; ?&gt;&lt;/title&gt;\n &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;?php echo $layout[&#39;css&#39;]; ?&gt;bootstrap.min.css&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;container&quot;&gt;\n\n&lt;nav class=&quot;navbar navbar-inverse&quot;&gt;\n &lt;div class=&quot;navbar-header&quot;&gt;\n  &lt;a class=&quot;navbar-brand&quot; href=&quot;&lt;?php echo url; ?&gt;&quot;&gt;Crud&lt;/a&gt;\n &lt;/div&gt;\n&lt;/nav&gt;\n&lt;h1&gt;All Data&lt;/h1&gt;\n\n&lt;table class=&quot;table table-striped table-bordered&quot;&gt;\n &lt;thead&gt;\n  &lt;tr&gt;\n  &lt;td&gt;Author and Title&lt;/td&gt;\n  &lt;td&gt;ISBN&lt;/td&gt;\n  &lt;td&gt;Publisher&lt;/td&gt;\n  &lt;td&gt;Year&lt;/td&gt;\n  &lt;td&gt;Summary&lt;/td&gt;\n  &lt;td&gt;Copies&lt;/td&gt;\n  &lt;/tr&gt;\n &lt;/thead&gt;\n &lt;tbody&gt;\n  &lt;?php\n  $data = $this-&gt;list;\n  foreach($data as $value):\n  ?&gt;\n  &lt;tr&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;title; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;isbn; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;publisher; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;year; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;summary; ?&gt;&lt;/td&gt;\n  &lt;td&gt;&lt;?php echo $value-&gt;copies; ?&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;?php endforeach ?&gt;\n &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p>&nbsp;\n<p>&nbsp;\n<p><strong>Router</strong></p>\n</p>\n</p>\n\n<p>Pada dasarnya jika anda membuat sebuah Controller, anda harus mendaftarkan ke router.php</p>\n\n<p>di base/Router.php, dengan cara sebagai berikut.</p>\n\n<p>Perhatikan baik baik, bisa dibilang susah susah gampang disaat mendaftarkan controller ke router.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\n/**\n * ************************************\n *  @author : Yudi Purwanto\n *  @link   : http://yudi-purwanto.com\n *  @since  : 14 May 2014\n *  File    : Router.php\n *  \n * \n **************************************/\nclass Router\n{\n    private $_controller;\n    private $_method;\n    \n    public function __construct() {\n        $page        = $_GET[&#39;test&#39;];   //Test eg: http:website.com/test dan jangan lupa setting htaccess\n\n        /* function method controller */\n        $staticPages = array(\n                        &#39;test&#39;\n        );\n\n        //&lt;-- *  Pages Default * --&gt;\n        if( !in_array( $page, $staticPages ) \n            &amp;&amp; isset( $page ) \n        ) {\n             $this-&gt;_c $page );\n            $this-&gt;_method     = strtolower( $page );\n            \n        }\n        //&lt;--- ************* Pages ********* ---&gt;\n        else if( isset( $page ) \n                &amp;&amp; in_array( $page, $staticPages )\n        ) {\n            //load nama controller adalah test = load nama folder test di dalam folder views, jadi harus sama\n             $this-&gt;_c\n            $this-&gt;_method     = strtolower( $page );\n        }\n\n        //&lt;-- * if no have variables defined $ _GET showed index * --&gt;\n        if( !$this-&gt;_controller ) {\n             $this-&gt;_c\n        }\n        \n        if( !$this-&gt;_method ) {\n            $this-&gt;_method = &#39;index&#39;;\n        }\n        \n    } //&lt;--- * End * --&gt;\n    \n    public function getController() {\n        return $this-&gt;_controller;\n    }\n    \n    public function getMethod() {\n        return $this-&gt;_method;\n    }\n \n} //&lt;-- * End Class * --&gt;\n\n/* End of file Router.php */\n/* Location: ./base/Router.php */</code></pre>\n\n<p>Untuk file htaccessnya anda bisa menambahkan seperti ini :</p>\n\n<pre data-pbcklang="sql" data-pbcktabsize="4">\n<code class="language-sql "># Test\nRewriteRule ^([a-zA-Z0-9-_]+)$ index.php?test=$1 [QSA,L]</code></pre>\n\n<p><strong>Selamat Mencoba...!!!</strong></p>\n\n<p>Download ultra Framework Versi ORM <a href="https://github.com/zhiephie/ultra-framework-orm/tree/master" target="_blank">disini</a></p>\n', '5c895702ac84c037e55b162aa0c04d95.png', 'orm,ultra,framework', 1403920298, 'yes', 1, 375);
INSERT INTO `tutorial` (`idtutorial`, `id_category`, `title`, `slug`, `text`, `image`, `tag`, `date`, `publish`, `author`, `counter`) VALUES
(10, 1, 'PHP Data Object (PDO)', 'php-data-object-pdo', '<p ><strong>What is PDO</strong></p>\n\n<ul>\n <li>Common inteface to any number of database systems</li>\n <li>Written in C, co you know it&#39;s FAST!</li>\n <li>Designed to make use of all the PHP 5.1&nbsp;features to simplify interface.</li>\n</ul>\n\n <p ><strong>Why is it needed?</strong></p>\n\n<ul>\n <li>Current state of affairs :</li>\n <li>Many native database extensions that are similar but&nbsp;do not provide the same interface.</li>\n <li>In most cases, very old code that does not even&nbsp;scratch the surface of what PHP can offer.</li>\n <li>In many instances does not account for all the&nbsp;capabilities offered by the database.</li>\n <li>Ex. SQLite, MySQL extensions</li>\n</ul>\n\n <p ><strong>What Databases are Supported?</strong></p>\n\n<p>At this time PDO offers the following drivers :</p>\n\n<ul>\n <li>MySQL 3,4,5 (depends on client libs)</li>\n <li>PostgreSQL</li>\n <li>SQLite 2 &amp; 3</li>\n <li>ODBC</li>\n <li>DB2</li>\n <li>Oracle</li>\n <li>Firebird</li>\n <li>FreeTDS/Sybase/MSSQL</li>\n</ul>\n\n <p ><strong>Using PDO</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">// MySQL connection\nnew PDO(&lsquo;mysql:host=localhost;dbname=testdb&rsquo;, $login, $passwd);\n\n// PostgreSQL\nnew PDO(&lsquo;pgsql:host=localhost port=5432 dbname=testdb user=john password=mypass&rsquo;);\n\n// SQLite\nnew PDO(&lsquo;sqlite:/path/to/database_file&rsquo;);</code></pre>\n\n <p ><strong>What if the Connection Fails?</strong></p>\n\n<blockquote>\n<p>As is the case with most native PHP objects,&nbsp;instantiation failure lead to an exception being&nbsp;thrown.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">try {\n$db = new PDO(...);\n} catch (PDOException $e) {\necho $e-&gt;getMessage();\n}</code></pre>\n\n <p ><strong>Persistent Connections</strong></p>\n\n<blockquote>\n<p>Connecting to complex databases like Oracle is a&nbsp;slow process, it would be nice to re-use a&nbsp;previously opened connection.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$opt = array(PDO::ATTR_PERSISTENT =&gt; TRUE) ;\ntry {\n$db = new PDO(&ldquo;dsn&rdquo;, $l, $p, $opt);\n} catch (PDOException $e) {\necho $e-&gt;getMessage();\n}</code></pre>\n\n <p ><strong>DSN INI Tricks</strong></p>\n\n<blockquote>\n<p>The DSN string can be an INI setting and you&nbsp;can &ldquo;name&rdquo; as many DSNs are you like.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">ini_set(&ldquo;pdo.dsn.ilia&rdquo;, &ldquo;sqlite::memory&rdquo;);\ntry {\n$db = new PDO(&ldquo;ilia&rdquo;);\n} catch (PDOException $e) {\necho $e-&gt;getMessage();\n}</code></pre>\n\n <p ><strong>Let&rsquo;s Run Some Queries</strong></p>\n\n<blockquote>\n<p>Query execution in PDO can be done in two&nbsp;ways</p>\n</blockquote>\n\n<ul>\n <li>Prepared Statements (recommended for speed &amp;&nbsp;security)</li>\n <li>Direct Execution</li>\n</ul>\n\n <p ><strong>Direct Query Execution</strong></p>\n\n<blockquote>\n<p>Queries that modify information need to be run&nbsp;via exec&#40;&#41; method.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$db = new PDO(&ldquo;DSN&rdquo;);\n//insert\n$db-&gt;exec&#40;&ldquo;INSERT INTO foo (id&#41;\nVALUES(&lsquo;bar&rsquo;)&rdquo;);\n//update\n$db-&gt;exec&#40;&ldquo;UPDATE foo SET id=&lsquo;bar&rsquo;&rdquo;&#41;;</code></pre>\n\n<blockquote>\n<p>The return value is the number of rows affected&nbsp;by the operation or FALSE on error.</p>\n</blockquote>\n\n <p ><strong>Better Error Handling</strong></p>\n\n<blockquote>\n<p>It stands to reason that being an OO extension&nbsp;PDO would allow error handling via&nbsp;Exceptions.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$db-&gt;setAttribute(\nPDO::ATTR_ERRMODE,\nPDO::ERRMODE_EXCEPTION\n);</code></pre>\n\n<blockquote>\n<p>Now any query failure will throw an Exception.</p>\n</blockquote>\n\n<p><strong>Fetch Query Results</strong></p>\n\n<ul>\n <li>Perhaps one of the biggest features of PDO is its&nbsp;flexibility when it comes to how data is to be fetched.</li>\n <li>Array (Numeric or Associated Indexes)</li>\n <li>Strings (for single column result sets)</li>\n <li>Objects (stdClass, object of given class or into an existing&nbsp;object)</li>\n <li>Callback function</li>\n <li>Lazy fetching</li>\n <li>Iterators</li>\n <li>And more!</li>\n</ul>\n\n <p ><strong>Array Fetching</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(&ldquo;SELECT * FROM foo&rdquo;);\nwhile ($row = $res-&gt;fetch(PDO::FETCH_NUM)){\n// $row == array with numeric keys\n}\n\n$res = $db-&gt;query(&ldquo;SELECT * FROM foo&rdquo;);\nwhile ($row = $res-&gt;fetch(PDO::FETCH_ASSOC)){\n// $row == array with associated (string) keys\n}\n\n$res = $db-&gt;query(&ldquo;SELECT * FROM foo&rdquo;);\nwhile ($row = $res-&gt;fetch(PDO::FETCH_BOTH)){\n// $row == array with associated &amp; numeric keys\n}</code></pre>\n\n <p ><strong>Fetch as String</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$u = $db-&gt;query(&ldquo;SELECT users WHERE\nlogin=&lsquo;login&rsquo; AND password=&lsquo;password&rsquo;&rdquo;);\n\n// fetch(PDO::FETCH_COLUMN)\nif ($u-&gt;fetchColumn()) { // returns a string\n// login OK\n} else { /* authentication failure */ }</code></pre>\n\n <p ><strong>Fetch as Standard Object</strong></p>\n\n<blockquote>\n<p>You can fetch a row as an instance of stdClass&nbsp;where column name == property name.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(&ldquo;SELECT * FROM foo&rdquo;);\nwhile ($obj = $res-&gt;fetch(PDO::FETCH_OBJ)) {\n// $obj == instance of stdClass\n}</code></pre>\n\n <p ><strong>Fetch Into a Class</strong></p>\n\n<blockquote>\n<p>PDO allows the result to be fetched into a class&nbsp;type of your choice.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(&ldquo;SELECT * FROM foo&rdquo;);\n$res-&gt;setFetchMode(\nPDO::FETCH_CLASS,\n&ldquo;className&rdquo;,\narray(&lsquo;optional&rsquo;=&lsquo;Constructor Params&rsquo;)\n);\nwhile ($obj = $res-&gt;fetch()) {\n// $obj == instance of className\n}</code></pre>\n\n <p ><strong>Fetch Into an Object</strong></p>\n\n<blockquote>\n<p>PDO even allows retrieval of data into an&nbsp;existing object.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$u = new userObject;\n\n$res = $db-&gt;query(&ldquo;SELECT * FROM users&rdquo;);\n$res-&gt;setFetchMode(PDO::FETCH_INTO, $u);\nwhile ($res-&gt;fetch()) {\n// will re-populate $u with row values\n}</code></pre>\n\n <p ><strong>Result Iteration</strong></p>\n\n<blockquote>\n<p>PDOStatement implements Iterator interface,&nbsp;which allows for a method-less result iteration.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(\n&ldquo;SELECT * FROM users&rdquo;,\nPDO::FETCH_ASSOC\n);\n\nforeach ($res as $row) {\n// $row == associated array representing\n// the row&rsquo;s values.\n}</code></pre>\n\n <p ><strong>Lazy Fetching</strong></p>\n\n<blockquote>\n<p>Lazy fetches returns a result in a form object,&nbsp;but holds of populating properties until they are&nbsp;actually used.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(\n&ldquo;SELECT * FROM users&rdquo;,\nPDO::FETCH_LAZY\n);\n\nforeach ($res as $row) {\necho $row[&lsquo;name&rsquo;]; // only fetch name column\n}</code></pre>\n\n <p ><strong>fetchAll()</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$qry = &ldquo;SELECT * FROM users&rdquo;;\n$res = $db-&gt;query($qry)-&gt;fetchAll(\nPDO::FETCH_ASSOC\n);\n// $res == array of all result rows, where each row\n// is an associated array.</code></pre>\n\n <p ><strong>Callback Function</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">function draw_message($subject,$email) { ... }\n\n$res = $db-&gt;query(&ldquo;SELECT * FROM msg&rdquo;);\n$res-&gt;fetchAll(\nPDO::FETCH_FUNC,\n&ldquo;draw_message&rdquo;\n);</code></pre>\n\n <p ><strong>Escaping in PDO</strong></p>\n\n<blockquote>\n<p>Escaping of special characters in PDO is&nbsp;handled via the quote() method.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$qry = &ldquo;SELECT * FROM users WHERE login=&ldquo;.$db-&gt;quote($_POST[&lsquo;login&rsquo;]).&rdquo; AND passwd=&ldquo;.$db-&gt;quote($_POST[&lsquo;pass&rsquo;]);</code></pre>\n\n <p ><strong>Prepared Statements</strong></p>\n\n<ul>\n <li>Compile once, execute as many times as you&nbsp;want.</li>\n <li>Clear separation between structure and input,&nbsp;which prevents SQL injection.</li>\n <li>Often faster then query()/exec&#40;&#41; even for single&nbsp;runs.</li>\n</ul>\n\n <p ><strong>Prepared Statements in Action</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$stmt = $db-&gt;prepare(\n&ldquo;SELECT * FROM users WHERE id=?&rdquo;\n);\n$stmt-&gt;execute(array($_GET[&lsquo;id&rsquo;]));\n$stmt-&gt;fetch(PDO::FETCH_ASSOC);</code></pre>\n\n <p ><strong>Bound Parameters</strong></p>\n\n<blockquote>\n<p>Prepared statements parameters can be given&nbsp;names and bound to variables.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$stmt = $db-&gt;prepare(&ldquo;INSERT INTO users VALUES(:name,:pass,:mail)&rdquo;);\nforeach (array(&lsquo;name&rsquo;,&rsquo;pass&rsquo;,&rsquo;mail&rsquo;) as $v)\n$stmt-&gt;bindParam(&lsquo;:&rsquo;.$v,$$v);\n$fp = fopen&#40;&ldquo;./users&rdquo;, &ldquo;r&rdquo;&#41;;\nwhile (list($name,$pass,$mail) = fgetcsv($fp,4096)) {\n$stmt-&gt;execute();\n}</code></pre>\n\n <p ><strong>Bound Result Columns</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$qry = &ldquo;SELECT :type, :data FROM images LIMIT 1&rdquo;;\n$stmt = $db-&gt;prepare($qry);\n$stmt-&gt;bindColumn(&lsquo;:type&rsquo;,$type);\n$stmt-&gt;bindColumn(&lsquo;:type&rsquo;,STDOUT,PDO::PARAM_LOB);\n$stmt-&gt;execute(PDO::FETCH_BOUND);\nheader(&ldquo;Content-Type: &ldquo;.$type);</code></pre>\n\n <p ><strong>Partial Data Retrieval</strong></p>\n\n<blockquote>\n<p>In some instances you only want part of the data&nbsp;on the cursor. To properly end the cursor use&nbsp;the closeCursor()&nbsp;method.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query(&ldquo;SELECT * FROM users&rdquo;);\nforeach ($res as $v) {\nif ($res[&lsquo;name&rsquo;] == &lsquo;end&rsquo;) {\n$res-&gt;closeCursor();\nbreak;\n}\n}</code></pre>\n\n <p ><strong>Transactions</strong></p>\n\n<blockquote>\n<p>Nearly all PDO drivers talk with transactional&nbsp;DBs, so PDO provides handy methods for this&nbsp;purpose.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$db-&gt;beginTransaction();\nif ($db-&gt;exec&#40;$qry&#41; === FALSE) {\n$db-&gt;rollback();\n}\n$db-&gt;commit();</code></pre>\n\n <p ><strong>Metadata</strong></p>\n\n<blockquote>\n<p>Like most native database interfaces PDO&nbsp;provides means of accessing query metadata.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">$res = $db-&gt;query($qry);\n$ncols = $res-&gt;columnCount();\nfor ($i=0; $i &lt; $ncols; $i++) {\n$meta_data = $stmt-&gt;getColumnMeta($i);\n}</code></pre>\n\n <p ><strong>lastInsertId()</strong></p>\n\n<blockquote>\n<p>Many databases have unique identifier assigned&nbsp;to each newly inserted row. PDO provides&nbsp;access to this value via lastInsertId() method.</p>\n</blockquote>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">if ($db-&gt;exec&#40;&ldquo;INSERT INTO ...&rdquo;&#41;) {\n$id = $db-&gt;lastInsertId();\n}</code></pre>\n\n<blockquote>\n<p>Can take optional sequence name as parameter.<br />\nUseful for PostgreSQL</p>\n</blockquote>\n\n <p ><strong>Extending PDO</strong></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">class DB extends PDO\n{\nfunction query($qry, $mode=NULL)\n{\n$res = parent::query($qry, $mode);\nif (!$res) {\nvar_dump($qry, $this-&gt;errorInfo());\nreturn null;\n} else {\nreturn $res;\n}\n}\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Thanks you!</p>\n', 'ffba7526672c60bc23b827ae9c7bdeaa.png', 'pdo', 1404630727, 'yes', 3, 361),
(11, 7, 'Cara install Intel ® XDK', 'cara-install-intel-xdk', '<p>Intel &reg; XDK dapat digunakan untuk membuat aplikasi mobile cross-platform. Tapi itu tidak terbatas hanya Windows. Pengembang Linux dapat mengambil keuntungan dari fitur-fiturnya, juga.</p>\n\n<p>Intel &reg; XDK&nbsp;dengan cepat menjadi pilihan yang sangat populer untuk membuat aplikasi HTML5&nbsp;yang menggunakan Apache Cordova. Bagian dari alasan untuk popularitas ini adalah keragaman platform yang didukung olehIntel &reg; XDK membangun layanan dan kemudahan untuk semua platform.</p>\n\n<p>Intel &reg; XDK memungkinkan Anda membangun aplikasi mobile cross-platform. Bonusnya adalah bahwa Anda tidak terbatas untuk mengembangkan aplikasi tersebut di Windows. Intel &reg; XDK juga dapat berjalan di Linux. Mari kita mencoba Installasi. Saya akan menunjukkan kepada Anda bagaimana&nbsp;menginstal, dan menggunakannya.</p>\n\n<p>Cara Installasinya sebagai berikut :</p>\n\n<ul>\n <li>Untuk Windows</li>\n</ul>\n\n<p>Download dan install Intel XDK&nbsp;dari situs&nbsp;<a href="https://software.intel.com/en-us/html5/tools" target="_blank">Intel</a>. Setelah menginstal XDK tersebut, pilih&nbsp;untuk membuat sebuah proyek baru dan pilih &quot;Mulai Dengan Demo&quot; pilihan. Pilihan ini akan memberikan Anda sebuah proyek kerja, sehingga Anda dapat menjadi lebih akrab dengan pengembangan menggunakan lingkungan ini.&nbsp;</p>\n\n<ul>\n <li>Untuk Linux</li>\n</ul>\n\n<p>Terlebih dahulu&nbsp;Download <a href="https://software.intel.com/en-us/html5/tools" target="_blank">disini</a></p>\n\n <p>exstrak dan letakkan pada Home direktori, masuk ke direktori folder Intel &reg; XDK&nbsp;doble klik&nbsp;<span >install_GUI.sh atau buka terminal&nbsp;</span></p>\n\n<p>masuk ke direktori Intel &reg; XDK dan setelah itu jalan kan dengan command</p>\n\n<pre data-pbcklang="sql" data-pbcktabsize="4">\n<code>/install_GUI.sh</code></pre>\n\n<p>Ikuti sampai proses selesai.</p>\n', 'caccdccc69a3bfe6443bed836af9b743.png', 'intel', 1405351235, 'yes', 6, 412),
(12, 1, 'Grabbing Website Kawal Pemilu', 'grabbing-website-kawal-pemilu-2014', 'Grabbing ?? Grabbing ?? Grabbing ?? Mungkin ada sebagian orang yang belum mengetahui apa itu Grabbing (Curl). Sepulang dari kuliah sebenarnya sudah begitu capeknya, namun saya penasaran ingin grabbing website kawalpemilu.org yang mana akhir akhir ini sedang naik daun.\r\n\r\nApa sih Grabbing itu..?? mungkin sedikit penjelasan dari saya mengenai atau pengertian grabbing tersebut.\r\n\r\nGrabbing adalah teknik untuk mengambil teks atau secara umum obyek yang ada di suatu situs lain kemudian diletakkan ke web kita.\r\n<br/>\r\nMaka secara otomatis informasi yang ada di web kita pun akan berubah secara otomatis.<br/>\r\nKonsep grabbing ini berbeda dengan konsep web service karena data teks yang diambil melalui grabbing ini tidak disajikan dalam bentuk format tertentu seperti halnya XML atau JSON. Namun teks yang diambil berada di halaman web situs, atau dengan kata lain terselip di dalam kode HTML.<br/>\r\nUntuk melakukan grabbing ini, kita bisa menggunakan CURL. Dengan CURL ini nanti, kita bisa baca semua kode HTML dari suatu situs lalu kita ambil informasi yang kita inginkan dan kemudian informasi tersebut kita tampilkan di web kita.\r\n<br/>\r\nsebagai contoh saya akan memberikan teknik secara sederhana untuk grabbing website kawal pemilu.\r\n<br/>\r\nperhatikan script berikut:\r\n<br/>\r\nuntuk script jelasnya bisa anda lihat disini http://pastebin.com/myeD7Hjr dan demonya bisa anda lihat disini http://yudi-purwanto.com/grabbing.php\r\n<br/>\r\n<br/>\r\n<pre data-pbcklang="php" data-pbcktabsize="4">\r\n<code class="language-php ">\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>Grabbing Website Kawal Pemilu 2014 - kawalpemilu.org</title>\r\n</head>\r\n<style type="text/css">\r\n.aggregate tr:nth-child(even) { background: #EEE; }\r\n.aggregate tr:nth-child(odd) { background: #FFF; }\r\n.aggregate tbody > tr:hover { background-color: #CCF; }\r\n.aggregate thead > tr:first-child,\r\n.aggregate tbody > tr:last-child { background-color: #CCC; }\r\n.aggregate td { padding: 2px 5px 2px 5px; font-family: verdana; font-size:11px; }\r\n.aggregate thead > tr > th { padding:0; margin:0; }\r\n.delta { font-size:9px; }\r\n</style>\r\n<script>\r\n  (function(i,s,o,g,r,a,m){i[''GoogleAnalyticsObject'']=r;i[r]=i[r]||function(){\r\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n  })(window,document,''script'',''//www.google-analytics.com/analytics.js'',''ga'');\r\n\r\n  ga(''create'', ''UA-52796581-1'', ''auto'');\r\n  ga(''send'', ''pageview'');\r\n\r\n</script>\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>\r\n<!-- <script src="jquery.min.js"></script> -->\r\n<script>\r\nvar hie = [];\r\nvar ids2names = {};\r\nvar host = ''http://kawal-pemilu.appspot.com'';\r\n\r\n/*var dbg = "";\r\nfunction debug(x) {\r\n  document.getElementById(''debug'').innerText = x;\r\n}*/\r\n\r\nfunction set_hie(depth, parent, opt_dontpush, opt_next) {\r\n  hie.length = depth + 1;\r\n  hie[depth] = parent;\r\n\r\n  if (depth == 4) {\r\n    display_tps(parent);\r\n  } else {\r\n    display_aggregate(parent, depth, opt_next);\r\n  }\r\n\r\n  var s = ''<a href="javascript:set_hie(0, 0)">Nasional</a>'';\r\n  for (var i = 1; i < hie.length; i++) {\r\n    s += '' &raquo; <a href="javascript:set_hie('' + i + '', '' + hie[i] + '')">'' + ids2names[hie[i]] + ''</a>'';\r\n  }\r\n  $(''#hie'').html(s);\r\n  $(''#hie2'').html(s);\r\n  var ht = ''0'';\r\n  for (var i = 1; i <= depth; i++) {\r\n    ht = ht+''.''+hie[i];\r\n  }\r\n  if (!opt_dontpush) {\r\n    history.pushState(null, null, ''#''+ht);\r\n    ga(''send'', ''screenview'', {\r\n    ''screenName'': window.location.hash\r\n  });\r\n  }\r\n}\r\n\r\nfunction prefix_padd(num, cnt) {\r\n  num = num + '''';\r\n  while (num.length < cnt) num = ''0'' + num;\r\n  return num;\r\n}\r\n\r\nfunction image_filename(p, t, h) {\r\n  return prefix_padd(p, 7) + prefix_padd(t, 3) + prefix_padd(h, 2);\r\n}\r\n\r\nfunction update_sum(tps_no) {\r\n  var prabowo = $(''#input1_'' + tps_no).val() || 0;\r\n  var jokowi = $(''#input2_'' + tps_no).val() || 0;\r\n  $(''#input3_'' + tps_no).val(parseInt(prabowo) + parseInt(jokowi));\r\n}\r\n\r\nfunction input_box(parent, tps_no) {\r\n  return ''Data belum dimasukkan.'';\r\n}\r\n\r\nfunction gen_values(parent, reported_by, tps_no, prabowo, jokowi, valid, invalid, fbid) {\r\n  var err = '''';\r\n  if (reported_by) {\r\n    err += ''<br>Error reported'';\r\n  } else {\r\n  var hash = (location.hash.length>0) ? location.hash.substr(1) : "";\r\n  err += "<br><a target=\\"_blank\\" href=\\"https://docs.google.com/forms/d/1YT78OME0woe3MA2bjhLoaWFU3GRB1XKAC0WSTrS3Ap0/viewform?entry.523444839=" + hash\r\n         + "&entry.1914184921=" + parent +\r\n         "&entry.1875556460=" + ids2names[hie[3]] + "&entry.711131508=" + ids2names[hie[4]] + "&entry.875394862=" + tps_no + "&entry.475186929=\\">Laporkan kesalahan</a>";\r\n  }\r\n  var dsah = valid - (prabowo + jokowi)\r\n  return ''<table>'' +\r\n    ''<tr><td>Prabowo:<td id="tps_id1_'' + tps_no + ''">'' + prabowo +\r\n    ''<tr><td>Jokowi:<td id="tps_id2_'' + tps_no + ''">'' + jokowi +\r\n    ''<tr><td>Suara sah:<td id="tps_id3_'' + tps_no + ''" '' + (prabowo + jokowi == valid ? '''' : ''bgcolor=magenta'') +''>'' + valid +\r\n      (dsah == 0 ? '''' :\r\n        ('' ('' + (dsah < 0 ? ''-'' : ''+'') + Math.abs(dsah) + '')'')\r\n      ) +\r\n    ''<tr><td>Tidak sah:<td id="tps_id4_'' + tps_no + ''">'' + invalid +\r\n    ''<tr><th colspan=2>'' + err +\r\n  ''</table>'';\r\n}\r\n\r\nfunction display_tps(parent) {\r\n  $(''#msg_status'').html(''Fetching ...'');\r\n  $(''#msg_status2'').html(''Fetching ...'');\r\n  $.ajax(host + ''/api/tps/'' + parent, { cache: false }).done(function(data) {\r\n    $(''#msg_status'').html('''');\r\n    $(''#msg_status2'').html('''');\r\n    var s = ''<table border="1"><thead><tr>\\\r\n      <th width="50">TPS\\\r\n      <th width="175">C1 full scan\\\r\n      <th width="225">C1 snippet\\\r\n      <th width="200">Crowd-sourced Values\\\r\n    </thead><tbody>'';\r\n    var tps_pending = 0;\r\n    for (var i = 0; i < data.length; i++) {\r\n      var r = data[i];\r\n      var tps_no = i + 1;\r\n      var is_pending = !r[2] && !r[3] && !r[4] && !r[5];\r\n      var has_scan = r[6];\r\n      var has_error = (r[7] == ''0'') ? false : r[7];\r\n      var entered_by = r[8];\r\n      var num = image_filename(parent, tps_no, 4);\r\n      if (is_pending && !tps_pending) tps_pending = tps_no;\r\n      s += ''<tr bgcolor='' + (has_error ? ''#ffaaaa'' : '''') + ''><th>#'' + r[0] +\r\n        ''<td align=center>'' +\r\n        ''Jika snippet di sebelah<br>kanan salah, anda bisa<br>melihat halaman lainnya<br>dari website KPU:<br><br>'' +\r\n          ''<a href="http://scanc1.kpu.go.id/viewp.php?f='' + image_filename(parent, tps_no, 1) + ''.jpg" target="_blank">Halaman 1</a><br>'' +\r\n          ''<a href="http://scanc1.kpu.go.id/viewp.php?f='' + image_filename(parent, tps_no, 2) + ''.jpg" target="_blank">Halaman 2</a><br>'' +\r\n          ''<a href="http://scanc1.kpu.go.id/viewp.php?f='' + image_filename(parent, tps_no, 3) + ''.jpg" target="_blank">Halaman 3</a><br>'' +\r\n          ''<a href="http://scanc1.kpu.go.id/viewp.php?f='' + image_filename(parent, tps_no, 4) + ''.jpg" target="_blank">Halaman 4</a><br>'' +\r\n          ''<a href="http://scanc1.kpu.go.id/viewp.php?f='' + image_filename(parent, tps_no, 5) + ''.jpg" target="_blank">Halaman 5</a><br>'' +\r\n        ''<td><a href="http://scanc1.kpu.go.id/viewp.php?f='' + num +\r\n          ''.jpg" target="_blank"><div style="width: 200px; height: 300px; overflow: hidden;">'' +\r\n        ''<img style="position: relative; left: -400px; top: -120px;" width="600" src="http://scanc1.kpu.go.id/viewp.php?f='' + num + ''.jpg"></div></a>'' +\r\n        ''<td align=center id="csval_''+ tps_no +''">'' + (has_scan ? (is_pending ? input_box(parent, tps_no) :\r\n          gen_values(parent, has_error, tps_no, r[2], r[3], r[4], r[5], entered_by)) : '' N / A '');\r\n    }\r\n    document.getElementById(''tbl'').innerHTML = s + ''</tbody></table>'';\r\n//    resolve_fbguys();\r\n    setTimeout(function () {\r\n      $(''#input1_'' + tps_pending).focus();\r\n      var el = $(''#input1_'' + tps_pending).position();\r\n      if (el) $(window).scrollTop(el.top - 400);\r\n    }, 100);\r\n  });\r\n}\r\n\r\nfunction disp_percent(rat) {\r\n  return percent(rat).replace(/\\./, '','') + "%";\r\n}\r\n\r\nfunction disp_delta(i) {\r\n  if (i < 0) return "-" + format(Math.abs(i));\r\n  else if (i > 0) return "+" + format(Math.abs(i));\r\n  return i;\r\n}\r\n\r\nfunction disp_delta_percent(rat) {\r\n  if (isNaN(rat)) return ''0,00'';\r\n  var p = percent(Math.abs(rat)).replace(/\\./, '','');\r\n  if (rat < -1e-4) return "-" + p + "%";\r\n  else if (rat > 1e-4) return "+" + p + "%";\r\n  return p + "%";\r\n}\r\n\r\nfunction percent(rat) {\r\n  if (isNaN(rat)) return ''0.00'';\r\n  var p = Math.floor(rat * 10000);\r\n  return Math.floor(p / 100) + ''.'' + prefix_padd(p % 100, 2);\r\n}\r\n\r\nfunction replace_char(s, index, ch) {\r\n  return s.substr(0, index) + ch + s.substr(index + 1);\r\n}\r\n\r\nfunction format(number) {\r\n  if (number == 0) return ''0'';\r\n  var nres = '''' + number;\r\n  var res = '''';\r\n  for (var i =0; i< nres.length;i++) {\r\n    if (i > 0 && i%3 == 0) {\r\n      res = ''.'' + res;\r\n    }\r\n    res = nres[nres.length-i-1] + res;\r\n  }\r\n  return res;\r\n}\r\n\r\n// var allData = { ''c'' : {}, ''da'' : {}, ''db'' : {}, ''dc'' : {} };\r\nvar allData = {};\r\n\r\nfunction display_recap(prefix, prevPrefix, highlight, regionName) {\r\n  var children = prefix + ''Children'';\r\n  var prevChildren = prevPrefix + ''Children'';\r\n\r\n  // indices\r\n  var ID = 0;\r\n  var NAMA = 1;\r\n  var NO1 = 2;\r\n  var NO2 = 3;\r\n  var TOTAL = 4;\r\n  // only for recap\r\n  var PRESENTASE = 5;\r\n  var DONE = 6;\r\n  var TO_BE_DONE = 7;\r\n\r\n  var THRESHOLD = 0.005;\r\n\r\n  // children\r\n  for (var i = 0; i < allData[children].length; i++) {\r\n    var row = allData[children][i];\r\n    var complete = (row[DONE] == row[TO_BE_DONE]);\r\n    if (row[TOTAL] > 0) { // entered\r\n      var percentCur = [ row[NO1] / row[TOTAL], row[NO2] / row[TOTAL]];\r\n      var prevIdx = -1;\r\n      for (var j = 0; j < allData[prevChildren].length; j++)\r\n        if (allData[prevChildren][j][ID] == row[ID]) {\r\n          prevIdx = j;\r\n          break;\r\n        }\r\n\r\n      var diff;\r\n      var absDiff;\r\n      var rowPrev = allData[prevChildren][prevIdx];\r\n      var percentPrev = [rowPrev[NO1] / rowPrev[TOTAL], rowPrev[NO2] / rowPrev[TOTAL]];\r\n      if (prevIdx == -1 || rowPrev[TOTAL] == 0) { // WHAT!!\r\n        diff = [percentCur[0], percentCur[1]];\r\n        absDiff = [row[NO1], row[NO2]];\r\n      }\r\n      else {\r\n        diff = [percentCur[0] - percentPrev[0], percentCur[1] - percentPrev[1]];\r\n        absDiff = [row[NO1] - rowPrev[NO1], row[NO2] - rowPrev[NO2]];\r\n      }\r\n\r\n      document.getElementById(prefix + ''_pb_c_''+row[ID]).innerHTML = format(row[NO1]) +\r\n        (complete ? ''<br> <div class="delta">('' + disp_delta(absDiff[0]) + '')</div>'' : "");\r\n      document.getElementById(prefix + ''_pb_p_''+row[ID]).innerHTML = disp_percent(percentCur[0]) +\r\n        ''<br> <div class="delta">('' + disp_delta_percent(diff[0]) + '')</div>'';\r\n      document.getElementById(prefix + ''_jk_c_''+row[ID]).innerHTML = format(row[NO2]) +\r\n        (complete ? ''<br> <div class="delta">('' + disp_delta(absDiff[1]) + '')</div>'' : "");\r\n      document.getElementById(prefix + ''_jk_p_''+row[ID]).innerHTML = disp_percent(percentCur[1]) +\r\n        ''<br> <div class="delta">('' + disp_delta_percent(diff[1]) + '')</div>'';\r\n      if (highlight && (rowPrev[TOTAL] == 0 || Math.abs(diff[0]) >= THRESHOLD)) {\r\n        document.getElementById(prefix + ''_pb_p_''+row[ID]).style.backgroundColor = "lightpink";\r\n      }\r\n      if (highlight && (rowPrev[TOTAL] == 0 || Math.abs(diff[1]) >= THRESHOLD)) {\r\n        document.getElementById(prefix + ''_jk_p_''+row[ID]).style.backgroundColor = "lightpink";\r\n      }\r\n      if (document.getElementById(prefix + ''_p_'' + row[ID])) {\r\n        document.getElementById(prefix + ''_p_'' + row[ID]).innerText = disp_percent(row[PRESENTASE]);\r\n        document.getElementById(prefix + ''_p_'' + row[ID]).title = row[DONE] + '' '' + regionName +'' dari '' + row[TO_BE_DONE];\r\n        if (complete) {\r\n          document.getElementById(prefix + ''_p_'' + row[ID]).style.background = "lightgreen";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // aggregate\r\n  var row = allData[prefix];\r\n  var complete = (row[DONE] == row[TO_BE_DONE]);\r\n  if (row[TOTAL] > 0) {\r\n    document.getElementById(prefix + ''_pb_ct'').innerText = format(row[NO1]);\r\n    document.getElementById(prefix + ''_pb_pt'').innerText = disp_percent(row[NO1]/row[TOTAL]);\r\n    document.getElementById(prefix + ''_jk_ct'').innerText = format(row[NO2]);\r\n    document.getElementById(prefix + ''_jk_pt'').innerText = disp_percent(row[NO2]/row[TOTAL]);\r\n    if (document.getElementById(prefix + ''_pt'')) {\r\n      document.getElementById(prefix + ''_pt'').innerText = disp_percent(row[PRESENTASE]);\r\n      document.getElementById(prefix + ''_pt'').title = disp_percent(row[DONE] + '' '' + regionName +'' dari '' + row[TO_BE_DONE]);\r\n      if (complete) {\r\n        document.getElementById(prefix + ''_pt'').style.background = "lightgreen";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction display_aggregate(parent, depth, opt_next) {\r\n  $(''#msg_status'').html(''Fetching ...'');\r\n  $(''#msg_status2'').html(''Fetching ...'');\r\n  $.ajax(host + ''/api/children/'' + parent, {\r\n    cache: false,\r\n    data: {},\r\n    dataType: "text", // expect back a text to sanitize errors.\r\n    error: function (xhr, status, error) {\r\n      console.log(status);\r\n      console.error(error);\r\n    },\r\n    success: function( data_txt ) {\r\n    // Bugs:\r\n    var x = data_txt.indexOf("PALENGA''\\"AN");\r\n    if (x != -1) data_txt = replace_char(data_txt, x + 8, ''\\'''');\r\n    x = data_txt.indexOf("RA''\\"AS");\r\n    if (x != -1) data_txt = replace_char(data_txt, x + 3, ''\\'''');\r\n    var data = JSON.parse(data_txt);\r\n    allData[''cChildren''] = data;\r\n    var wda1 = depth < 4;\r\n    var wdb1 = depth < 3;\r\n    var wdc1 = depth < 2;\r\n\r\n    $(''#msg_status'').html('''');\r\n    $(''#msg_status2'').html('''');\r\n    var s = ''<table class="aggregate"><thead><tr bgcolor="#DDDDDD">\\\r\n      <th width="40">No\\\r\n      <th width="225">Tempat\\\r\n      <th width="120" colspan="2">Prabowo-Hatta<br>(C1)'' +\r\n      (wda1 ? ''<th width="120" colspan="2">Prabowo-Hatta<br>(DA1)'' : '''')      +\r\n      (wdb1 ? ''<th width="120" colspan="2">Prabowo-Hatta<br>(DB1)'' : '''')      +\r\n      (wdc1 ? ''<th width="120" colspan="2">Prabowo-Hatta<br>(DC1)'' : '''')      +\r\n      ''<th width="120" colspan="2">Jokowi-JK<br>(C1)'' +\r\n      (wda1 ? ''<th width="120" colspan="2">Jokowi-JK<br>(DA1)'' : '''') +\r\n      (wdb1 ? ''<th width="120" colspan="2">Jokowi-JK<br>(DB1)'' : '''') +\r\n      (wdc1 ? ''<th width="120" colspan="2">Jokowi-JK<br>(DC1)'' : '''') +\r\n      ''<th width="70">Suara sah\\\r\n      <th width="70">Tidak sah\\\r\n      <th width="60">TPS Error\\\r\n      <th width="60">TPS''+\r\n//      <th width="200" colspan="2">Diproses/Total TPS''+\r\n      (wdb1 ? ''<th width="60">DA1%'' : '''') +\r\n      (wdc1 ? ''<th width="60">DB1%'' : '''') +\r\n    ''</thead><tbody>'';\r\n\r\n    var total = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (var i = 0; i < data.length; i++) {\r\n      var r = data[i];\r\n      var prabowo_count = r[2];\r\n      var jokowi_count = r[3];\r\n      var valid_count = r[4];\r\n      var invalid_count = r[5];\r\n      var errors_count = r[6];\r\n      var entered_count = r[7];\r\n      var pending_count = r[8];\r\n      var tps_count = r[9];\r\n      var dsah = valid_count - (prabowo_count + jokowi_count);\r\n      var prabowo_percent = disp_percent(prabowo_count / (prabowo_count + jokowi_count));\r\n      var jokowi_percent = disp_percent(jokowi_count / (prabowo_count + jokowi_count));\r\n      for (var j = 2; j <= 9; j++) total[j] += r[j];\r\n\r\n      ids2names[r[0]] = r[1];\r\n      var sort_of_done_entered = (percent(entered_count / tps_count) >= 99) ? ''bgcolor=lightgreen'' : '''';\r\n      var sort_of_done_available = (percent(pending_count / tps_count) >= 99) ? ''bgcolor=lightgreen'' : '''';\r\n      s += ''<tr><td align=center>'' + (i + 1) +\r\n        ''<td><a href="javascript:set_hie('' + (depth + 1) + '','' + r[0] +'')">'' + r[1] + ''</a>'' +\r\n        ''<td align=right width=60>'' + format(prabowo_count) +\r\n        ''<td align=right '' + (prabowo_count > jokowi_count ? "bgcolor=lightgreen" : "") + ''>'' + prabowo_percent +\r\n        (wda1 ? ''<td align=right id="da_pb_c_'' + r[0] + ''"></td><td align=right id="da_pb_p_'' + r[0] + ''"></td>'' : '''') +\r\n        (wdb1 ? ''<td align=right id="db_pb_c_'' + r[0] + ''"></td><td align=right id="db_pb_p_'' + r[0] + ''"></td>'' : '''') +\r\n        (wdc1 ? ''<td align=right id="dc_pb_c_'' + r[0] + ''"></td><td align=right id="dc_pb_p_'' + r[0] + ''"></td>'' : '''') +\r\n        ''<td align=right width=60>'' + format(jokowi_count) +\r\n        ''<td align=right '' + (prabowo_count < jokowi_count ? "bgcolor=lightgreen" : "") + ''>'' + jokowi_percent +\r\n        (wda1 ? ''<td align=right id="da_jk_c_'' + r[0] + ''"></td><td align=right id="da_jk_p_'' + r[0] + ''"></td>'' : '''') +\r\n        (wdb1 ? ''<td align=right id="db_jk_c_'' + r[0] + ''"></td><td align=right id="db_jk_p_'' + r[0] + ''"></td>'' : '''') +\r\n        (wdc1 ? ''<td align=right id="dc_jk_c_'' + r[0] + ''"></td><td align=right id="dc_jk_p_'' + r[0] + ''"></td>'' : '''') +\r\n        ''<td align=right '' + (dsah != 0 ? "bgcolor=lightpink" : "") + ''>'' + format(valid_count) +\r\n           (dsah != 0 ? ('' <br> <span class="delta">('' + disp_delta(dsah) + '') </span>'') : "") +\r\n        ''<td align=right>'' + format(invalid_count) +\r\n        ''<td align=right '' + (errors_count != 0 ? "bgcolor=lightpink" : "") + '' title="'' + format(errors_count) + " TPS dari " + format(tps_count) + ''">'' + disp_percent(errors_count / tps_count) + // format(errors_count) +\r\n        ''<td align=right '' + sort_of_done_entered +'' title="'' + format(entered_count) + '' TPS dari '' + format(tps_count) + ''">'' +\r\n           disp_percent(entered_count / tps_count) +\r\n//        ''<td align=right width=120>'' + format(entered_count) + '' / '' + format(tps_count) +\r\n//        ''<td align=right ''+sort_of_done_entered+''>'' + percent(entered_count / tps_count) + ''%'' +\r\n        (wdb1 ? ''<td align=right id="da_p_'' + r[0] + ''"></td>'' : '''') +\r\n        (wdc1 ? ''<td align=right id="db_p_'' + r[0] + ''"></td>'' : '''');\r\n    }\r\n\r\n    var prabowo_count = total[2];\r\n    var jokowi_count = total[3];\r\n    var valid_count = total[4];\r\n    var invalid_count = total[5];\r\n    var errors_count = total[6];\r\n    var entered_count = total[7];\r\n    var pending_count = total[8];\r\n    var tps_count = total[9];\r\n    var dsah = valid_count - (prabowo_count + jokowi_count);\r\n    var prabowo_percent = percent(prabowo_count / (prabowo_count + jokowi_count)) + ''%'';\r\n    var jokowi_percent = percent(jokowi_count / (prabowo_count + jokowi_count)) + ''%'';\r\n    s += ''<tr bgcolor="#DDDDDD"><td>&nbsp;'' +\r\n      ''<th align="right">TOTAL: &nbsp; '' +\r\n      ''<td align=right width=60>'' + format(prabowo_count) +\r\n      ''<td align=right '' + (prabowo_count > jokowi_count ? "bgcolor=lightgreen" : "") + ''>'' + prabowo_percent +\r\n              (wda1 ? ''<td align=right id="da_pb_ct"><td align=right id="da_pb_pt">'' : '''') +\r\n              (wdb1 ? ''<td align=right id="db_pb_ct"><td align=right id="db_pb_pt">'' : '''') +\r\n              (wdc1 ? ''<td align=right id="dc_pb_ct"><td align=right id="dc_pb_pt">'' : '''') +\r\n      ''<td align=right width=60>'' + format(jokowi_count) +\r\n      ''<td align=right '' + (prabowo_count < jokowi_count ? "bgcolor=lightgreen" : "") + ''>'' + jokowi_percent +\r\n              (wda1 ? ''<td align=right id="da_jk_ct"><td align=right id="da_jk_pt">'' : '''') +\r\n              (wdb1 ? ''<td align=right id="db_jk_ct"><td align=right id="db_jk_pt">'' : '''') +\r\n              (wdc1 ? ''<td align=right id="dc_jk_ct"><td align=right id="dc_jk_pt">'' : '''') +\r\n      ''<td align=right '' + (dsah != 0 ? "bgcolor=lightpink" : "") + ''>'' + format(valid_count) +\r\n           (dsah != 0 ? '' <br> <span class="delta">('' + disp_delta(dsah) + '')</span>'': '''') +\r\n      ''<td align=right>'' + format(invalid_count) +\r\n      ''<td align=right '' + (errors_count != 0 ? "bgcolor=lightpink" : "") + '' title="'' + format(errors_count) + " TPS dari " + format(tps_count) + ''">'' + disp_percent(errors_count / tps_count) + // format(errors_count) +\r\n      ''<td align=right '' + sort_of_done_entered +'' title="'' + format(entered_count) + '' TPS dari '' + format(tps_count) + ''">'' +\r\n         disp_percent(entered_count / tps_count) +\r\n//      ''<td align=right width=100>'' + format(entered_count) + '' / '' + format(tps_count) +\r\n//      ''<td align=right>'' + percent(entered_count / tps_count) + ''%'' +\r\n              (wdb1 ? ''<td align=right id="da_pt"></td>'' : '''') +\r\n              (wdc1 ? ''<td align=right id="db_pt"></td>'' : '''') +\r\n      ''</tbody></table>'';\r\n    allData[''c''] = total;\r\n\r\n    if (opt_next && opt_next()) {\r\n       // Do nothing\r\n    } else {\r\n      $(''#tbl'').html(s);\r\n      $.ajax(host + ''/da1x/'' + parent, {\r\n        cache: false,\r\n        data: {},\r\n        dataType: "text", // expect back a text to sanitize errors.\r\n        error: function (xhr, status, error) {\r\n          console.log(status);\r\n          console.error(error);\r\n        },\r\n        success: function( data_txt ) {\r\n          var data = JSON.parse(data_txt);\r\n          if (''da1'' in data) {\r\n            allData[''da''] = data[''da1''];\r\n            allData[''daChildren''] = data[''children_da1''];\r\n          }\r\n          if (''db1'' in data) {\r\n            allData[''db''] = data[''db1''];\r\n            allData[''dbChildren''] = data[''children_db1''];\r\n          }\r\n          if (''dc1'' in data) {\r\n            allData[''dc''] = data[''dc1''];\r\n            allData[''dcChildren''] = data[''children_dc1''];\r\n          }\r\n\r\n          var regionName = [''propinsi'', ''kabupaten/kota'', ''kecamatan'', ''kelurahan'', ''tps''];\r\n          if (wda1) display_recap(''da'', ''c'', depth >= 2, regionName[3]);\r\n          if (wdb1) display_recap(''db'', ''da'', depth >= 1, regionName[2]);\r\n          if (wdc1) display_recap(''dc'', ''db'', depth >= 0, regionName[1]);\r\n        }\r\n      });\r\n\r\n\r\n/*            var SUARA_TIDAK_SAH_HEADER_IDX = 12;\r\n            var SUARA_TIDAK_SAH_IDX = 20;\r\n            $(''#tbl tr th:nth-child('' + SUARA_TIDAK_SAH_HEADER_IDX + '')'').hide()\r\n            $(''#tbl tr td:nth-child('' + SUARA_TIDAK_SAH_IDX + '')'').hide() */\r\n\r\n    }\r\n  }});\r\n}\r\n\r\nfunction updatePos(opt_pos) {\r\n  if (location.hash == "") {\r\n    set_hie(0, 0);\r\n    return false;\r\n  }\r\n  var hies = location.hash.substr(1).split(''.'');\r\n  if (opt_pos >= hies.length) {\r\n    return false;\r\n  }\r\n  for (var i = opt_pos; i+1 < hies.length; i++) {\r\n    if (hie.length <= i || hie[i] != hies[i-0]) {\r\n      set_hie(i, hies[opt_pos], true, function() { return updatePos(i+1);});\r\n      return true;\r\n    }\r\n  }\r\n  set_hie(hies.length-1, hies[hies.length-1], true, function() { return false;});\r\n  return true;\r\n}\r\n\r\nfunction reload() {\r\n nest = location.hash != "";\r\n  if (nest) {\r\n   updatePos(0);\r\n  ga(''send'', ''screenview'', {\r\n    ''screenName'': window.location.hash\r\n  });\r\n  } else\r\n    set_hie(0, 0);\r\n}\r\n\r\n$(function () {\r\n  reload();\r\n})\r\n\r\nwindow.onhashchange = reload;\r\n</script>\r\n<body>\r\nBergabung bersama kami bersama-sama kita Kawal Pemilu 2014!\r\n<br>\r\nKunjungi <a target="_blank" href="https://www.facebook.com/pages/Kawal-Pemilu-2014/1452601258341836">Facebook Page Kawal Pemilu 2014</a> dan bantu kami melaporkan problem data!\r\n<a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.kawalpemilu.org" data-text="Mari berpartisipasi mengawal pemilu bersama" data-hashtags="kawalpemilu">Tweet</a>\r\n<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?''http'':''https'';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+''://platform.twitter.com/widgets.js'';fjs.parentNode.insertBefore(js,fjs);}}(document, ''script'', ''twitter-wjs'');</script>\r\n<br><br>\r\n  <i>Masalah teknis server sudah diatasi dan website ini sudah kembali pulih untuk semua pengunjung. Apabila mengalami kesulitan, coba clear DNS cache anda dan/atau gunakan <a href="https://developers.google.com/speed/public-dns/docs/using">Google DNS</a>.</i>\r\n<br><br>\r\n  Jangan lupa, baca petunjuk pakai di bawah.\r\n<hr/>\r\n\r\n<p>\r\n<span id="hie" style="display:inline"><a href="javascript:set_hie(0, 0)">Nasional</a></span>\r\n<span id="msg_status"></span>\r\n</p>\r\n\r\n<?php\r\n function bacaHTML($url){\r\n      // inisialisasi CURL\r\n     $data = curl_init();\r\n      // setting CURL\r\n      curl_setopt($data, CURLOPT_RETURNTRANSFER, 1);\r\n      curl_setopt($data, CURLOPT_URL, $url);\r\n      // menjalankan CURL untuk membaca isi file\r\n      $hasil = curl_exec($data);\r\n              curl_close($data);\r\n              return $hasil;\r\n        }\r\n          \r\n        $kodeHTML =  bacaHTML(''http://kawalpemilu.org/'');\r\n        $pecah = explode(''<div id="tbl">'', $kodeHTML);\r\n        $pecahLagi = explode(''</div>'', $pecah[1]);\r\n         echo "<div id=''tbl''>".$pecahLagi[0]."</div>";\r\n         echo "<table class=''aggregate''>".$pecahLagi[1]."</table>";\r\n?>\r\n</body>\r\n</html>\r\n</code></pre>\r\n<br/>\r\nYang terpenting sebenarnya hanya ini:\r\n<br/>\r\n<pre data-pbcklang="php" data-pbcktabsize="4">\r\n<code class="language-php ">\r\n<?php\r\n function bacaHTML($url){\r\n      // inisialisasi CURL\r\n     $data = curl_init();\r\n      // setting CURL\r\n      curl_setopt($data, CURLOPT_RETURNTRANSFER, 1);\r\n      curl_setopt($data, CURLOPT_URL, $url);\r\n      // menjalankan CURL untuk membaca isi file\r\n      $hasil = curl_exec($data);\r\n              curl_close($data);\r\n              return $hasil;\r\n        }\r\n          \r\n        $kodeHTML =  bacaHTML(''http://kawalpemilu.org/'');\r\n        $pecah = explode(''<div id="tbl">'', $kodeHTML);\r\n        $pecahLagi = explode(''</div>'', $pecah[1]);\r\n         echo "<div id=''tbl''>".$pecahLagi[0]."</div>";\r\n         echo "<table class=''aggregate''>".$pecahLagi[1]."</table>";\r\n?>\r\n</pre></code>\r\n<br/>\r\nSelesai. sekarang anda bisa mendemokan script tersebut.\r\n<br/>\r\nSekian tutorial kali ini, semoga menambah wawasan dan pengetahuan mengenai konsep grabbing itu sendiri.', 'grabbing.png', 'curl,grabbing', 1405351235, 'yes', 6, 290),
(13, 1, 'Laravel 4.3', 'laravel-43', '<p><span >Laravel 4.3</span></p>\n\n <p><span >Laravel 4.3 introduces a fresh application structure to the default Laravel project. This new structure serves as a better foundation for building robust application in Laravel, as well as embraces new auto-loading standards (PSR-4) throughout the application. First, let&#39;s examine two of the major changes :</span></p>\n\n <p><span >New Folder Structure</span></p>\n\n<p>The old&nbsp;<code>app/models</code>&nbsp;directory has been entirely removed. Instead, all of your code lives directly within the&nbsp;<code>app</code>&nbsp;folder, and, by default, is organized to the&nbsp;<code>App</code>&nbsp;namespace. This default namespace can be quickly changed using the new&nbsp;<code>app:name</code>&nbsp;Artisan command. The Laravel class generators will remember your application namespace by examining the new<code>config/namespaces.php</code>&nbsp;configuration file.</p>\n\n<p>Controllers, filters, and requests (a new type of class in Laravel 4.3) are now grouped under the<code>app/Http</code>&nbsp;directory, as they are all classes related to the HTTP transport layer of your application. Instead of a single, flat file of route filters, all filters are now broken into their own class files.</p>\n\n<p>A new&nbsp;<code>app/Providers</code>&nbsp;directory replaces the&nbsp;<code>app/start</code>&nbsp;files from previous versions of Laravel 4.x. These service providers provide various bootstrapping functions to your application, such as error handling, logging, route loading, and more. Of course, you are free to create additional service providers for your application.</p>\n\n<p>Application language files and views have been moved to the&nbsp;<code>resources</code>&nbsp;directory.</p>\n\n<h3>Thorough Namespacing</h3>\n\n<p>Laravel 4.3 ships with the entire&nbsp;<code>app</code>&nbsp;directory under the&nbsp;<code>App</code>&nbsp;namespace. Out of the box, Composer will auto-load all classes within the&nbsp;<code>app</code>&nbsp;directory using the PSR-4 auto-loading standard, eliminating the need to&nbsp;<code>composer dump-autoload</code>&nbsp;every time you add a new class to your project. Of course, since controllers are namespaced, you will need to import any classes you utilize from other namespaces.</p>\n\n<h3>Dependency Injection On Routes &amp; Controller Methods</h3>\n\n<p>In previous versions of Laravel 4.x, you can type type-hint controller dependencies in the controller&#39;s constructor and they will automatically be injected into the controller instance. Of course, this is still possible in Laravel 4.3; however, you can also type-hint dependencies on your controller&nbsp;<strong>methods</strong>&nbsp;as well! For example:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">public function show(PhotoService $photos, $id)\n{\n    $photo = $photos-&gt;find($id);\n\n    //\n}</code></pre>\n\n<h3>Form Requests</h3>\n\n<p>Laravel 4.3 introduces&nbsp;<strong>form requests</strong>, which extend the<code>Illuminate\\Foundation\\Http\\FormRequest</code>&nbsp;class. These request objects can be combined with the method injection described above to provide a boiler-plate free method of validating user input. Let&#39;s dig in and look at a sample&nbsp;<code>FormRequest</code>:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php namespace App\\Http\\Requests;\n\nclass RegisterRequest extends FormRequest {\n\n    public function rules()\n    {\n        return [\n            &#39;email&#39; =&gt; &#39;required|email|unique:users&#39;,\n            &#39;password&#39; =&gt; &#39;required|confirmed|min:8&#39;,\n        ];\n    }\n\n    public function authorize()\n    {\n        return true;\n    }\n\n}</code></pre>\n\n <p>When the Laravel IoC container identifies that the class it is injecting is a&nbsp;<code>FormRequest</code>instance, the request will&nbsp;<strong>automatically be validated</strong>. This means that if your controller action is called, you can safely assume the HTTP request input has been validated according to the rules you specified in your form request class. Even more, if the request is invalid, an HTTP redirect, which you may customize, will automatically be issued, and the error messages will be either flashed to the session or converted to JSON.&nbsp;<strong>Form validation has never been more simple.</strong>For more information on&nbsp;<code>FormRequest</code>&nbsp;validation, check out the&nbsp;<a href="http://laravel.com/docs/validation#form-requests" >documentation</a>.</p>\n\n<h3>New Generators</h3>\n\n<p>To compliment the new default application structure,&nbsp;<code>provider:make</code>,&nbsp;<code>filter:make</code>, and<code>request:make</code>&nbsp;Artisan commands have been added to the framework.</p>\n\n<h3>Route Cache</h3>\n\n<p>If your application is made up entirely of controller routes, you may utilize the new&nbsp;<code>route:cache</code>Artisan command to drastically speed up the registration of your routes. This is primarily useful on applications with 100+ routes and typically makes this portion of your code 50x faster. Literally!</p>\n\n<p><a href="http://laravel.com/docs/releases" target="_blank">laravel.com/docs/releases</a></p>\n', '8bec78b95d1768a266dc850ff8bade79.png', 'laravel,4.3', 1409331572, 'yes', 3, 284),
(14, 1, 'Install laravel 5', 'install-laravel-5', '<p>Tutorial sederhana ini akan membahas tentang cara penginstallan laravel 5, pertama yang harus disiapkan adalah composer bisa mendownloadnya getcomposer.org sesuaikan OS anda.<br />\noke jika sudah terinstall dengan lancar, maka langsung saja ketahap penginstallan.</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">composer create-project laravel/laravel namafolder dev-develop</code></pre>\n\n<p>tunggu proses hingga selesai.<br />\n<br />\nUntuk struktur baru dilaravel bisa ditonton videonya <a href="http://www.youtube.com/watch?v=hD0q1u8M8IE" target="_blank">disini</a></p>\n', '87f4fea5949b2b106f922e8e7aa59fa8.png', 'laravel,5', 1410958743, 'yes', 6, 193);
INSERT INTO `tutorial` (`idtutorial`, `id_category`, `title`, `slug`, `text`, `image`, `tag`, `date`, `publish`, `author`, `counter`) VALUES
(15, 4, 'InnoDB vs MyISAM', 'innodb-vs-myisam', '<blockquote>\n <p><span ><strong>InnoDB vs MyISAM</strong></span></p>\n</blockquote>\n\n<p>&nbsp;</p>\n\n <table align="left" border="1" cellpadding="1" cellspacing="1" >\n <tbody>\n  <tr>\n    <td ><strong>InnoDB</strong></td>\n    <td ><strong>MyISAM</strong></td>\n  </tr>\n  <tr>\n    <td><span >I<span >NNODB is default storage engine on Windows</span></span></td>\n    <td><span ><span >MYISAM is default storage engine on Linux</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >INNODB support COMMIT, ROLLBACK, and crash-recovery capabilities to protect user data because it support ACID property.</span></span></td>\n    <td><span ><span >MYISAM didn&#39;t support.</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >INNODB support ROW-LEVEL Locking(multiprocessing on single table)</span></span></td>\n    <td><span ><span >MYISAM support TABLE-LEVEL locking</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >UPDATE and DELETE query will execute faster because it support ROW-LEVEL lock</span></span></td>\n    <td><span ><span >SELECT query will execute faster because it support TABLE level lock.</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >INNODB support FOREIGN-KEY referential-integrity constraints</span></span></td>\n    <td><span ><span >MYISAM didn&#39;t support</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >INNODB didn&#39;t support Full-Text searching</span></span></td>\n    <td><span ><span >MYISAM support Full-Text searching</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >InnoDB has been designed for maximum performance when processing large data volumes,because Row data stored in Primary Key order</span></span></td>\n    <td><span ><span >No ordering in storage of data</span></span></td>\n  </tr>\n  <tr>\n    <td><span ><span >Each INNODB table is stored on disk in single file&#40;.FRM&#41;</span></span></td>\n    <td><span ><span >Each MyISAM table is stored on disk in three files(.MYD, .MYI, .FRM)&nbsp;</span><br />\n    <span >.FRM Table Format&nbsp;</span><br />\n    <span >.MYD MY Data&nbsp;</span><br />\n    <span >.MYI MY Index</span></span></td>\n  </tr>\n </tbody>\n</table>\n\n<p>&nbsp;</p>\n', '02835100a7bfcf62595386d7ec95c954.png', 'innodb,myisam', 1411073508, 'yes', 3, 91),
(17, 1, 'Design Patterns in PHP', 'design-patterns-in-php', '<p>Patterns in php. Today we are going to talk about design patterns in web development, more precisely &ndash; in PHP. Experienced developers are probably familiar with this, but this article will be extremely useful for all novice developers. So, what is it &ndash; design patterns? Design Patterns aren&rsquo;t analysis patterns, they are not descriptions of common structures like linked lists, nor are they particular application or framework designs. In fact, design patterns are &ldquo;descriptions of communicating objects and classes that are customized to solve a general design problem in a particular context.&rdquo; In other words, Design patterns provide a generic reusable solution to the programming problems that we encounter every day. Design patterns are not ready classes or libraries, that can be simply applied to your system, this is not a concrete solution that can be converted in to source code, design patterns are much more than that. They are patterns, or templates, that can be implemented to solve a problem in different particular situations.</p>\n\n<p>Design patterns help to speed up the development, as the templates are proven and from the developer&rsquo;s position, only implementation is required. Design patterns not only make software development faster, but also encapsulate big ideas in a simpler way. Also, be careful not to use them in wrong places in order to avoid unpleasant situations. In addition to the theory, we also give you the most abstract and simple examples of design patterns.</p>\n\n<p>&nbsp;</p>\n\n<blockquote>\n<p><strong>Singleton</strong></p>\n</blockquote>\n\n<p>This is one of the most popular patterns. When developing web applications, it often makes sense conceptually and architecturally to allow access to only one instance of a particular class (during runtime). The singleton pattern enables us to do this. Example:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\n/**\n * Singleton class\n */\nfinal class Product\n{\n    /**\n     * @var self\n     */\n    private static $instance;\n\n    /**\n     * @var mixed\n     */\n    public $mix;\n    /**\n     * Return self instance\n     *\n     * @return self\n     */\n    public static function getInstance() {\n        if (!(self::$instance instanceof self)) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n    private function __construct() {\n    }\n\n    private function __clone() {\n    }\n}\n$firstProduct = Product::getInstance();\n $sec\n$firstProduct-&gt;mix = &#39;test&#39;;\n$secondProduct-&gt;mix = &#39;example&#39;;\nprint_r($firstProduct-&gt;mix);\n// example\nprint_r($secondProduct-&gt;mix);\n// example\n</code></pre>\n\n<blockquote>\n<p><strong>Multiton</strong></p>\n</blockquote>\n\n<p>Maybe someone will want to use a variety of singletons in your project:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\nabstract class FactoryAbstract {\n    protected static $instances = array();\n    public static function getInstance() {\n        $className = static::getClassName();\n        if (!(self::$instances[$className] instanceof $className)) {\n            self::$instances[$className] = new $className();\n        }\n        return self::$instances[$className];\n    }\n    public static function removeInstance() {\n        $className = static::getClassName();\n        if (array_key_exists($className, self::$instances)) {\n            unset(self::$instances[$className]);\n        }\n    }\n    final protected static function getClassName() {\n        return get_called_class();\n    }\n    protected function __construct() { }\n    final protected function __clone() { }\n}\nabstract class Factory extends FactoryAbstract {\n    final public static function getInstance() {\n        return parent::getInstance();\n    }\n    final public static function removeInstance() {\n        parent::removeInstance();\n    }\n}\n// using:\nclass FirstProduct extends Factory {\n    public $a = [];\n}\nclass SecondProduct extends FirstProduct {\n}\nFirstProduct::getInstance()-&gt;a[] = 1;\nSecondProduct::getInstance()-&gt;a[] = 2;\nFirstProduct::getInstance()-&gt;a[] = 3;\nSecondProduct::getInstance()-&gt;a[] = 4;\nprint_r(FirstProduct::getInstance()-&gt;a);\n// array(1, 3)\nprint_r(SecondProduct::getInstance()-&gt;a);\n// array(2, 4) \n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Strategy</strong></p>\n</blockquote>\n</p>\n\n<p>The strategy pattern is based on algorithms. You encapsulate specific families of algorithms allowing the client class responsible for instantiating a particular algorithm to have no knowledge of the actual implementation. Example:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\ninterface OutputInterface {\n    public function load();\n}\nclass SerializedArrayOutput implements OutputInterface {\n    public function load() {\n        return serialize($arrayOfData);\n    }\n}\nclass JsonStringOutput implements OutputInterface {\n    public function load() {\n        return json_encode($arrayOfData);\n    }\n}\nclass ArrayOutput implements OutputInterface {\n    public function load() {\n        return $arrayOfData;\n    }\n}\n</code></pre>\n\n<blockquote>\n<p><strong>Decorator</strong></p>\n</blockquote>\n\n<p>This pattern allows us to add new or additional behavior to an object during runtime, depending on the situation. Example:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\nclass HtmlTemplate {\n    // any parent class methods\n}\nclass Template1 extends HtmlTemplate {\n    protected $_html;\n    public function __construct() {\n        $this-&gt;_html = &quot;&lt;p&gt;__text__&lt;/p&gt;&quot;;\n    }\n    public function set($html) {\n        $this-&gt;_html = $html;\n    }\n    public function render() {\n        echo $this-&gt;_html;\n    }\n}\nclass Template2 extends HtmlTemplate {\n    protected $_element;\n    public function __construct($s) {\n        $this-&gt;_element = $s;\n        $this-&gt;set(&quot;&lt;h2&gt;&quot; . $this-&gt;_html . &quot;&lt;/h2&gt;&quot;);\n    }\n     \n    public function __call($name, $args) {\n        $this-&gt;_element-&gt;$name($args[0]);\n    }\n}\nclass Template3 extends HtmlTemplate {\n    protected $_element;\n    public function __construct($s) {\n        $this-&gt;_element = $s;\n        $this-&gt;set(&quot;&lt;u&gt;&quot; . $this-&gt;_html . &quot;&lt;/u&gt;&quot;);\n    }\n    public function __call($name, $args) {\n        $this-&gt;_element-&gt;$name($args[0]);\n    }\n}\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Registry</strong></p>\n</blockquote>\n</p>\n\n<p>This pattern is a bit unusual from the overall list, because it is not a Creational pattern. Well, register &ndash; it is hash, and you access to data through the static methods:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\n/**\n* Registry class\n*/\nclass Package {\n    protected static $data = array();\n    public static function set($key, $value) {\n        self::$data[$key] = $value;\n    }\n\n    public static function get($key) {\n        return isset(self::$data[$key]) ? self::$data[$key] : null;\n    }\n    final public static function removeObject($key) {\n        if (array_key_exists($key, self::$data)) {\n            unset(self::$data[$key]);\n        }\n    }\n}\nPackage::set(&#39;name&#39;, &#39;Package name&#39;);\nprint_r(Package::get(&#39;name&#39;));\n// Package name\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Factory</strong></p>\n</blockquote>\n</p>\n\n<p>This is another very known pattern. It acts exactly as it sounds: this is class that does as the real factory of object instances. In other words, assume that we know that there are factories that produce some kind of a product. We do not care how a factory makes this product, but we know that any factory has one universal way to ask for it:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\ninterface Factory {\n    public function getProduct();\n}\ninterface Product {\n    public function getName();\n}\n\nclass FirstFactory implements Factory {\n    public function getProduct() {\n        return new FirstProduct();\n    }\n}\nclass SecondFactory implements Factory {\n    public function getProduct() {\n        return new SecondProduct();\n    }\n}\nclass FirstProduct implements Product {\n    public function getName() {\n        return &#39;The first product&#39;;\n    }\n}\nclass SecondProduct implements Product {\n    public function getName() {\n        return &#39;Second product&#39;;\n    }\n}\n$factory = new FirstFactory();\n$firstProduct = $factory-&gt;getProduct();\n$factory = new SecondFactory();\n $sec\nprint_r($firstProduct-&gt;getName());\n// The first product\nprint_r($secondProduct-&gt;getName());\n// Second product\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Abstract Factory</strong></p>\n</blockquote>\n</p>\n\n<p>There are situations when we have some of the same type of factories and we want to encapsulate the logic of choice, what of the factories use to a given task. This pattern cames to the rescue:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\nclass Config {\n    public static $factory = 1;\n}\ninterface Product {\n    public function getName();\n}\nabstract class AbstractFactory {\n    public static function getFactory() {\n        switch (Config::$factory) {\n            case 1:\n                return new FirstFactory();\n            case 2:\n                return new SecondFactory();\n        }\n        throw new Exception(&#39;Bad config&#39;);\n    }\n    abstract public function getProduct();\n}\nclass FirstFactory extends AbstractFactory {\n    public function getProduct() {\n        return new FirstProduct();\n    }\n}\nclass FirstProduct implements Product {\n    public function getName() {\n        return &#39;The product from the first factory&#39;;\n    }\n}\nclass SecondFactory extends AbstractFactory {\n    public function getProduct() {\n        return new SecondProduct();\n    }\n}\nclass SecondProduct implements Product {\n    public function getName() {\n        return &#39;The product from second factory&#39;;\n    }\n}\n$firstProduct = AbstractFactory::getFactory()-&gt;getProduct();\nConfig::$factory = 2;\n $sec\nprint_r($firstProduct-&gt;getName());\n// The first product from the first factory\nprint_r($secondProduct-&gt;getName());\n// Second product from second factory\n</code></pre>\n\n<blockquote>\n<p><strong>Observer</strong></p>\n</blockquote>\n\n<p>An object is made observable by adding a method that allows another object, the observer to get registered. If the observable object gets changed, it sends a message to the objects which are registered as observers:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\ninterface Observer {\n  function onChanged($sender, $args);\n}\ninterface Observable {\n  function addObserver($observer);\n}\nclass CustomerList implements Observable {\n  private $_observers = array();\n  public function addCustomer($name) {\n    foreach($this-&gt;_observers as $obs)\n      $obs-&gt;onChanged($this, $name);\n  }\n  public function addObserver($observer) {\n    $this-&gt;_observers []= $observer;\n  }\n}\nclass CustomerListLogger implements Observer {\n  public function onChanged($sender, $args) {\n    echo( &quot;&#39;$args&#39; Customer has been added to the list \\n&quot; );\n  }\n}\n$ul = new UserList();\n$ul-&gt;addObserver( new CustomerListLogger() );\n$ul-&gt;addCustomer( &quot;Jack&quot; );\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong><code>Adapter</code></strong></p>\n</blockquote>\n</p>\n\n<p><code>This pattern allows you to repurpose a class with a different interface, allowing it to be used by a system which uses different calling methods:</code></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\nclass SimpleBook {\n    private $author;\n    private $title;\n    function __construct($author_in, $title_in) {\n        $this-&gt;author = $author_in;\n        $this-&gt;title  = $title_in;\n    }\n    function getAuthor() {\n        return $this-&gt;author;\n    }\n    function getTitle() {\n        return $this-&gt;title;\n    }\n}\nclass BookAdapter {\n    private $book;\n    function __construct(SimpleBook $book_in) {\n        $this-&gt;book = $book_in;\n    }\n    function getAuthorAndTitle() {\n        return $this-&gt;book-&gt;getTitle().&#39; by &#39;.$this-&gt;book-&gt;getAuthor();\n    }\n}\n// Usage\n$book = new SimpleBook(&quot;Gamma, Helm, Johnson, and Vlissides&quot;, &quot;Design Patterns&quot;);\n$bookAdapter = new BookAdapter($book);\necho &#39;Author and Title: &#39;.$bookAdapter-&gt;getAuthorAndTitle();\nfunction echo $line_in) {\n  echo $line_in.&quot;&lt;br/&gt;&quot;;\n}\n</code></pre>\n\n<blockquote>\n<p><strong>Lazy Initialization</strong></p>\n</blockquote>\n\n<p>Here is another interesting situation. Imagine that you have a factory, but you do not know what part of its functionality you need, and what &ndash; no. In such cases, the necessary operations are performed only if they are needed and only once:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\ninterface Product {\n    public function getName();\n}\nclass Factory {\n\n    protected $firstProduct;\n    protected $secondProduct;\n    public function getFirstProduct() {\n        if (!$this-&gt;firstProduct) {\n            $this-&gt;firstProduct = new FirstProduct();\n        }\n        return $this-&gt;firstProduct;\n    }\n    public function getSecondProduct() {\n        if (!$this-&gt;secondProduct) {\n             $this-&gt;sec SecondProduct();\n        }\n        return $this-&gt;secondProduct;\n    }\n}\nclass FirstProduct implements Product {\n    public function getName() {\n        return &#39;The first product&#39;;\n    }\n}\nclass SecondProduct implements Product {\n    public function getName() {\n        return &#39;Second product&#39;;\n    }\n}\n$factory = new Factory();\nprint_r($factory-&gt;getFirstProduct()-&gt;getName());\n// The first product\nprint_r($factory-&gt;getSecondProduct()-&gt;getName());\n// Second product\nprint_r($factory-&gt;getFirstProduct()-&gt;getName());\n// The first product\n</code></pre>\n\n<blockquote>\n<p><strong>Chain of responsibility</strong></p>\n</blockquote>\n\n<p>The pattern also has another name &ndash; Chain of Command. It follows a chain of command with a series of handlers. The message (query) runs through a series of these handlers and at each junction it is regulated whether the handler can handle the query or not. The process stops the moment a handler can handle the request:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\ninterface Command {\n    function onCommand($name, $args);\n}\nclass CommandChain {\n    private $_commands = array();\n    public function addCommand($cmd) {\n        $this-&gt;_commands[]= $cmd;\n    }\n    public function runCommand($name, $args) {\n        foreach($this-&gt;_commands as $cmd) {\n            if ($cmd-&gt;onCommand($name, $args))\n                return;\n        }\n    }\n}\nclass CustCommand implements Command {\n    public function onCommand($name, $args) {\n        if ($name != &#39;addCustomer&#39;)\n            return false;\n        echo(&quot;This is CustomerCommand handling &#39;addCustomer&#39;\\n&quot;);\n        return true;\n    }\n}\nclass MailCommand implements Command {\n    public function onCommand($name, $args) {\n        if ($name != &#39;mail&#39;)\n            return false;\n        echo(&quot;This is MailCommand handling &#39;mail&#39;\\n&quot;);\n        return true;\n    }\n}\n$cc = new CommandChain();\n$cc-&gt;addCommand( new CustCommand());\n$cc-&gt;addCommand( new MailCommand());\n$cc-&gt;runCommand(&#39;addCustomer&#39;, null);\n$cc-&gt;runCommand(&#39;mail&#39;, null);\n&lt;/code&gt;&lt;/pre&gt;\nObject pool\nObject pool &ndash; is a hash, which can be stacked to initialize an object and get them out if needed:\n&lt;pre data-pbcklang=&quot;php&quot; data-pbcktabsize=&quot;4&quot;&gt;\n&lt;code class=&quot;language-php &quot;&gt;&amp;lt;&lt;?php\nclass Product {\n    protected $id;\n    public function __construct($id) {\n        $this-&gt;id = $id;\n    }\n    public function getId() {\n        return $this-&gt;id;\n    }\n}\nclass Factory {\n    protected static $products = array();\n    public static function pushProduct(Product $product) {\n        self::$products[$product-&gt;getId()] = $product;\n    }\n    public static function getProduct($id) {\n        return isset(self::$products[$id]) ? self::$products[$id] : null;\n    }\n    public static function removeProduct($id) {\n        if (array_key_exists($id, self::$products)) {\n            unset(self::$products[$id]);\n        }\n    }\n}\nFactory::pushProduct(new Product(&#39;first&#39;));\nFactory::pushProduct(new Product(&#39;second&#39;));\nprint_r(Factory::getProduct(&#39;first&#39;)-&gt;getId());\n// first\nprint_r(Factory::getProduct(&#39;second&#39;)-&gt;getId());\n// second\n</code></pre>\n\n<blockquote>\n<p><strong>Object pool</strong></p>\n</blockquote>\n\n<p>Object pool &ndash; is a hash, which can be stacked to initialize an object and get them out if needed:<code class="language-php "> </code></p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\nclass Product {\n    protected $id;\n    public function __construct($id) {\n        $this-&gt;id = $id;\n    }\n    public function getId() {\n        return $this-&gt;id;\n    }\n}\nclass Factory {\n    protected static $products = array();\n    public static function pushProduct(Product $product) {\n        self::$products[$product-&gt;getId()] = $product;\n    }\n    public static function getProduct($id) {\n        return isset(self::$products[$id]) ? self::$products[$id] : null;\n    }\n    public static function removeProduct($id) {\n        if (array_key_exists($id, self::$products)) {\n            unset(self::$products[$id]);\n        }\n    }\n}\nFactory::pushProduct(new Product(&#39;first&#39;));\nFactory::pushProduct(new Product(&#39;second&#39;));\nprint_r(Factory::getProduct(&#39;first&#39;)-&gt;getId());\n// first\nprint_r(Factory::getProduct(&#39;second&#39;)-&gt;getId());\n// second\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Prototype</strong></p>\n</blockquote>\n</p>\n\n<p>Sometime, some objects should be initialized multiple times. It makes sense to save on their initialization, especially if initialization requires time and resources. Prototype &ndash; a pre-initialized and saved object. If necessary, it could be cloned:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">;&lt;?php\ninterface Product {\n}\nclass Factory {\n    private $product;\n    public function __construct(Product $product) {\n        $this-&gt;product = $product;\n    }\n    public function getProduct() {\n        return clone $this-&gt;product;\n    }\n}\nclass SomeProduct implements Product {\n    public $name;\n}\n$prototypeFactory = new Factory(new SomeProduct());\n$firstProduct = $prototypeFactory-&gt;getProduct();\n$firstProduct-&gt;name = &#39;The first product&#39;;\n $sec\n$secondProduct-&gt;name = &#39;Second product&#39;;\nprint_r($firstProduct-&gt;name);\n// The first product\nprint_r($secondProduct-&gt;name);\n// Second product\n</code></pre>\n\n<p>&nbsp;\n<blockquote>\n<p><strong>Builder</strong></p>\n</blockquote>\n</p>\n\n<p>This template is used when we want to encapsulate the creation of a complex object:</p>\n\n<pre data-pbcklang="php" data-pbcktabsize="4">\n<code class="language-php ">&lt;?php\nclass Product {\n    private $name;\n    public function setName($name) {\n        $this-&gt;name = $name;\n    }\n    public function getName() {\n        return $this-&gt;name;\n    }\n}\nabstract class Builder {\n    protected $product;\n\n    final public function getProduct() {\n        return $this-&gt;product;\n    }\n    public function buildProduct() {\n        $this-&gt;product = new Product();\n    }\n}\nclass FirstBuilder extends Builder {\n    public function buildProduct() {\n        parent::buildProduct();\n        $this-&gt;product-&gt;setName(&#39;The product of the first builder&#39;);\n    }\n}\nclass SecondBuilder extends Builder {\n    public function buildProduct() {\n        parent::buildProduct();\n        $this-&gt;product-&gt;setName(&#39;The product of second builder&#39;);\n    }\n}\nclass Factory {\n    private $builder;\n    public function __construct(Builder $builder) {\n        $this-&gt;builder = $builder;\n        $this-&gt;builder-&gt;buildProduct();\n    }\n    public function getProduct() {\n        return $this-&gt;builder-&gt;getProduct();\n    }\n}\n$firstDirector = new Factory(new FirstBuilder());\n $sec Factory(new SecondBuilder());\nprint_r($firstDirector-&gt;getProduct()-&gt;getName());\n// The product of the first builder\nprint_r($secondDirector-&gt;getProduct()-&gt;getName());\n// The product of second builder \n</code></pre>\n\n<p>&nbsp;\n<p>Thanks you for reading.</p>\n</p>\n', '47074ca1b27fef5cc54cd8855ad91c08.png', 'design,patterns', 1413851601, 'yes', 3, 114),
(18, 1, 'Menampilkan List Repository dengan Api Github', 'menampilkan-List-repository-dengan-api-github', '<p>Menampilkan list repository digithub dengan memanfaatkan api dari github, sempat diskusi dengan salah satu master bernama <a href=''https://www.facebook.com/adiebiazajah'' target=''_blank''>SundiTreeyansyah</a> yang membahas <a href=''microsoft.github.io'' target=''_blank''>microsoft.github.io</a>, dialamat microsoft.github.io bagaimana dia menampilkan repo githubnya, pastinya dengan API</p>\r\n<p>Langsung clone script digithub <a href='' https://github.com/zhiephie/api-github'' target=''_blank''>https://github.com/zhiephie/api-github</a>', 'github1.jpg', 'github,,api', 1413851601, 'yes', 1, 40);

--
-- Triggers `tutorial`
--
DROP TRIGGER IF EXISTS `tg_delete_tutorial`;
DELIMITER //
CREATE TRIGGER `tg_delete_tutorial` AFTER DELETE ON `tutorial`
 FOR EACH ROW BEGIN
INSERT INTO tutorial_delete
(
idtutorial,
id_category,
title,
slug,
text,
image,
tag,
date,
publish,
author,
counter,
create_at,
name_user
)
VALUES
(
OLD.idtutorial,
OLD.id_category,
OLD.title,
OLD.slug,
OLD.text,
OLD.image,
OLD.tag,
OLD.date,
OLD.publish,
OLD.author,
OLD.counter,
SYSDATE(),
CURRENT_USER
);
END
//
DELIMITER ;

-- --------------------------------------------------------

--
-- Table structure for table `tutorial_delete`
--

CREATE TABLE IF NOT EXISTS `tutorial_delete` (
  `idtutorial` int(10) NOT NULL,
  `id_category` int(3) DEFAULT NULL,
  `title` varchar(100) NOT NULL,
  `slug` varchar(100) NOT NULL,
  `text` text NOT NULL,
  `image` varchar(100) NOT NULL,
  `tag` varchar(100) NOT NULL,
  `date` int(20) DEFAULT NULL,
  `publish` enum('yes','no') NOT NULL,
  `author` int(3) NOT NULL,
  `counter` int(5) DEFAULT NULL,
  `create_at` datetime DEFAULT NULL,
  `name_user` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`idtutorial`),
  UNIQUE KEY `tutorial_fk` (`idtutorial`,`slug`,`title`),
  KEY `fk_tutorial_idx` (`id_category`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `tutorial_delete`
--

INSERT INTO `tutorial_delete` (`idtutorial`, `id_category`, `title`, `slug`, `text`, `image`, `tag`, `date`, `publish`, `author`, `counter`, `create_at`, `name_user`) VALUES
(16, 1, 'Design Patterns in PHP', 'design-patterns-in-php', 'Patterns in php. Today we are going to talk about design patterns in web development, more precisely – in PHP. Experienced developers are probably familiar with this, but this article will be extremely useful for all novice developers. So, what is it – design patterns? Design Patterns aren’t analysis patterns, they are not descriptions of common structures like linked lists, nor are they particular application or framework designs. In fact, design patterns are “descriptions of communicating objects and classes that are customized to solve a general design problem in a particular context.” In other words, Design patterns provide a generic reusable solution to the programming problems that we encounter every day. Design patterns are not ready classes or libraries, that can be simply applied to your system, this is not a concrete solution that can be converted in to source code, design patterns are much more than that. They are patterns, or templates, that can be implemented to solve a problem in different particular situations.\nDesign patterns help to speed up the development, as the templates are proven and from the developer’s position, only implementation is required. Design patterns not only make software development faster, but also encapsulate big ideas in a simpler way. Also, be careful not to use them in wrong places in order to avoid unpleasant situations. In addition to the theory, we also give you the most abstract and simple examples of design patterns.\n\nSingleton\n\nThis is one of the most popular patterns. When developing web applications, it often makes sense conceptually and architecturally to allow access to only one instance of a particular class (during runtime). The singleton pattern enables us to do this. Example:\n\n<?php\n/**\n * Singleton class\n */\nfinal class Product\n{\n\n    /**\n     * @var self\n     */\n    private static $instance;\n\n    /**\n     * @var mixed\n     */\n    public $mix;\n\n\n    /**\n     * Return self instance\n     *\n     * @return self\n     */\n    public static function getInstance() {\n        if (!(self::$instance instanceof self)) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n\n    private function __construct() {\n    }\n\n    private function __clone() {\n    }\n}\n\n$firstProduct = Product::getInstance();\n$secondProduct = Product::getInstance();\n\n$firstProduct->mix = ''test'';\n$secondProduct->mix = ''example'';\n\nprint_r($firstProduct->mix);\n// example\nprint_r($secondProduct->mix);\n// example\nMultiton\n\nMaybe someone will want to use a variety of singletons in your project:\n\n<?php\n\nabstract class FactoryAbstract {\n\n    protected static $instances = array();\n\n    public static function getInstance() {\n        $className = static::getClassName();\n        if (!(self::$instances[$className] instanceof $className)) {\n            self::$instances[$className] = new $className();\n        }\n        return self::$instances[$className];\n    }\n\n    public static function removeInstance() {\n        $className = static::getClassName();\n        if (array_key_exists($className, self::$instances)) {\n            unset(self::$instances[$className]);\n        }\n    }\n\n    final protected static function getClassName() {\n        return get_called_class();\n    }\n\n    protected function __construct() { }\n\n    final protected function __clone() { }\n}\n\nabstract class Factory extends FactoryAbstract {\n\n    final public static function getInstance() {\n        return parent::getInstance();\n    }\n\n    final public static function removeInstance() {\n        parent::removeInstance();\n    }\n}\n// using:\n\nclass FirstProduct extends Factory {\n    public $a = [];\n}\nclass SecondProduct extends FirstProduct {\n}\n\nFirstProduct::getInstance()->a[] = 1;\nSecondProduct::getInstance()->a[] = 2;\nFirstProduct::getInstance()->a[] = 3;\nSecondProduct::getInstance()->a[] = 4;\n\nprint_r(FirstProduct::getInstance()->a);\n// array(1, 3)\nprint_r(SecondProduct::getInstance()->a);\n// array(2, 4)\nStrategy\n\nThe strategy pattern is based on algorithms. You encapsulate specific families of algorithms allowing the client class responsible for instantiating a particular algorithm to have no knowledge of the actual implementation. Example:\n\n<?php\n\ninterface OutputInterface {\n    public function load();\n}\n\nclass SerializedArrayOutput implements OutputInterface {\n    public function load() {\n        return serialize($arrayOfData);\n    }\n}\n\nclass JsonStringOutput implements OutputInterface {\n    public function load() {\n        return json_encode($arrayOfData);\n    }\n}\n\nclass ArrayOutput implements OutputInterface {\n    public function load() {\n        return $arrayOfData;\n    }\n}\nDecorator\n\nThis pattern allows us to add new or additional behavior to an object during runtime, depending on the situation. Example:\n\n<?php\nclass HtmlTemplate {\n    // any parent class methods\n}\n \nclass Template1 extends HtmlTemplate {\n    protected $_html;\n     \n    public function __construct() {\n        $this->_html = "<p>__text__</p>";\n    }\n     \n    public function set($html) {\n        $this->_html = $html;\n    }\n     \n    public function render() {\n        echo $this->_html;\n    }\n}\n \nclass Template2 extends HtmlTemplate {\n    protected $_element;\n     \n    public function __construct($s) {\n        $this->_element = $s;\n        $this->set("<h2>" . $this->_html . "</h2>");\n    }\n     \n    public function __call($name, $args) {\n        $this->_element->$name($args[0]);\n    }\n}\n \nclass Template3 extends HtmlTemplate {\n    protected $_element;\n     \n    public function __construct($s) {\n        $this->_element = $s;\n        $this->set("<u>" . $this->_html . "</u>");\n    }\n     \n    public function __call($name, $args) {\n        $this->_element->$name($args[0]);\n    }\n}\nRegistry\n\nThis pattern is a bit unusual from the overall list, because it is not a Creational pattern. Well, register – it is hash, and you access to data through the static methods:\\\n\n<?php\n/**\n* Registry class\n*/\nclass Package {\n\n    protected static $data = array();\n\n    public static function set($key, $value) {\n        self::$data[$key] = $value;\n    }\n\n    public static function get($key) {\n        return isset(self::$data[$key]) ? self::$data[$key] : null;\n    }\n\n    final public static function removeObject($key) {\n        if (array_key_exists($key, self::$data)) {\n            unset(self::$data[$key]);\n        }\n    }\n}\n\n\nPackage::set(''name'', ''Package name'');\n\nprint_r(Package::get(''name''));\n// Package name\nFactory\n\nThis is another very known pattern. It acts exactly as it sounds: this is class that does as the real factory of object instances. In other words, assume that we know that there are factories that produce some kind of a product. We do not care how a factory makes this product, but we know that any factory has one universal way to ask for it:\n\n<?php\n\ninterface Factory {\n    public function getProduct();\n}\n\ninterface Product {\n    public function getName();\n}\n\nclass FirstFactory implements Factory {\n\n    public function getProduct() {\n        return new FirstProduct();\n    }\n}\n\nclass SecondFactory implements Factory {\n\n    public function getProduct() {\n        return new SecondProduct();\n    }\n}\n\nclass FirstProduct implements Product {\n\n    public function getName() {\n        return ''The first product'';\n    }\n}\n\nclass SecondProduct implements Product {\n\n    public function getName() {\n        return ''Second product'';\n    }\n}\n\n$factory = new FirstFactory();\n$firstProduct = $factory->getProduct();\n$factory = new SecondFactory();\n$secondProduct = $factory->getProduct();\n\nprint_r($firstProduct->getName());\n// The first product\nprint_r($secondProduct->getName());\n// Second product\nAbstract Factory\n\nThere are situations when we have some of the same type of factories and we want to encapsulate the logic of choice, what of the factories use to a given task. This pattern cames to the rescue:\n\n<?php\n\nclass Config {\n    public static $factory = 1;\n}\n\ninterface Product {\n    public function getName();\n}\n\nabstract class AbstractFactory {\n\n    public static function getFactory() {\n        switch (Config::$factory) {\n            case 1:\n                return new FirstFactory();\n            case 2:\n                return new SecondFactory();\n        }\n        throw new Exception(''Bad config'');\n    }\n\n    abstract public function getProduct();\n}\n\nclass FirstFactory extends AbstractFactory {\n    public function getProduct() {\n        return new FirstProduct();\n    }\n}\nclass FirstProduct implements Product {\n    public function getName() {\n        return ''The product from the first factory'';\n    }\n}\n\nclass SecondFactory extends AbstractFactory {\n    public function getProduct() {\n        return new SecondProduct();\n    }\n}\nclass SecondProduct implements Product {\n    public function getName() {\n        return ''The product from second factory'';\n    }\n}\n\n$firstProduct = AbstractFactory::getFactory()->getProduct();\nConfig::$factory = 2;\n$secondProduct = AbstractFactory::getFactory()->getProduct();\n\nprint_r($firstProduct->getName());\n// The first product from the first factory\nprint_r($secondProduct->getName());\n// Second product from second factory\nObserver\n\nAn object is made observable by adding a method that allows another object, the observer to get registered. If the observable object gets changed, it sends a message to the objects which are registered as observers:\n\n<?php\n\ninterface Observer {\n  function onChanged($sender, $args);\n}\n\ninterface Observable {\n  function addObserver($observer);\n}\n\nclass CustomerList implements Observable {\n  private $_observers = array();\n\n  public function addCustomer($name) {\n    foreach($this->_observers as $obs)\n      $obs->onChanged($this, $name);\n  }\n\n  public function addObserver($observer) {\n    $this->_observers []= $observer;\n  }\n}\n\nclass CustomerListLogger implements Observer {\n  public function onChanged($sender, $args) {\n    echo( "''$args'' Customer has been added to the list \\n" );\n  }\n}\n\n$ul = new UserList();\n$ul->addObserver( new CustomerListLogger() );\n$ul->addCustomer( "Jack" );\nAdapter\n\nThis pattern allows you to repurpose a class with a different interface, allowing it to be used by a system which uses different calling methods:\n\n<?php\n\nclass SimpleBook {\n\n    private $author;\n    private $title;\n\n    function __construct($author_in, $title_in) {\n        $this->author = $author_in;\n        $this->title  = $title_in;\n    }\n\n    function getAuthor() {\n        return $this->author;\n    }\n\n    function getTitle() {\n        return $this->title;\n    }\n}\n\nclass BookAdapter {\n\n    private $book;\n\n    function __construct(SimpleBook $book_in) {\n        $this->book = $book_in;\n    }\n    function getAuthorAndTitle() {\n        return $this->book->getTitle().'' by ''.$this->book->getAuthor();\n    }\n}\n\n// Usage\n$book = new SimpleBook("Gamma, Helm, Johnson, and Vlissides", "Design Patterns");\n$bookAdapter = new BookAdapter($book);\necho ''Author and Title: ''.$bookAdapter->getAuthorAndTitle();\n\nfunction echo $line_in) {\n  echo $line_in."<br/>";\n}\nLazy Initialization\n\nHere is another interesting situation. Imagine that you have a factory, but you do not know what part of its functionality you need, and what – no. In such cases, the necessary operations are performed only if they are needed and only once:\n\n<?php\n\ninterface Product {\n    public function getName();\n}\n\nclass Factory {\n\n    protected $firstProduct;\n    protected $secondProduct;\n\n    public function getFirstProduct() {\n        if (!$this->firstProduct) {\n            $this->firstProduct = new FirstProduct();\n        }\n        return $this->firstProduct;\n    }\n\n    public function getSecondProduct() {\n        if (!$this->secondProduct) {\n            $this->secondProduct = new SecondProduct();\n        }\n        return $this->secondProduct;\n    }\n}\n\nclass FirstProduct implements Product {\n    public function getName() {\n        return ''The first product'';\n    }\n}\n\nclass SecondProduct implements Product {\n    public function getName() {\n        return ''Second product'';\n    }\n}\n\n\n$factory = new Factory();\n\nprint_r($factory->getFirstProduct()->getName());\n// The first product\nprint_r($factory->getSecondProduct()->getName());\n// Second product\nprint_r($factory->getFirstProduct()->getName());\n// The first product\nChain of responsibility\n\nThe pattern also has another name – Chain of Command. It follows a chain of command with a series of handlers. The message (query) runs through a series of these handlers and at each junction it is regulated whether the handler can handle the query or not. The process stops the moment a handler can handle the request:\n\n<?php\n\ninterface Command {\n    function onCommand($name, $args);\n}\n\nclass CommandChain {\n    private $_commands = array();\n\n    public function addCommand($cmd) {\n        $this->_commands[]= $cmd;\n    }\n\n    public function runCommand($name, $args) {\n        foreach($this->_commands as $cmd) {\n            if ($cmd->onCommand($name, $args))\n                return;\n        }\n    }\n}\n\nclass CustCommand implements Command {\n    public function onCommand($name, $args) {\n        if ($name != ''addCustomer'')\n            return false;\n        echo("This is CustomerCommand handling ''addCustomer''\\n");\n        return true;\n    }\n}\n\nclass MailCommand implements Command {\n    public function onCommand($name, $args) {\n        if ($name != ''mail'')\n            return false;\n        echo("This is MailCommand handling ''mail''\\n");\n        return true;\n    }\n}\n\n$cc = new CommandChain();\n$cc->addCommand( new CustCommand());\n$cc->addCommand( new MailCommand());\n$cc->runCommand(''addCustomer'', null);\n$cc->runCommand(''mail'', null);\nObject pool\n\nObject pool – is a hash, which can be stacked to initialize an object and get them out if needed:\n\n<?php\n\nclass Product {\n\n    protected $id;\n\n    public function __construct($id) {\n        $this->id = $id;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n}\n\nclass Factory {\n\n    protected static $products = array();\n\n    public static function pushProduct(Product $product) {\n        self::$products[$product->getId()] = $product;\n    }\n\n    public static function getProduct($id) {\n        return isset(self::$products[$id]) ? self::$products[$id] : null;\n    }\n\n    public static function removeProduct($id) {\n        if (array_key_exists($id, self::$products)) {\n            unset(self::$products[$id]);\n        }\n    }\n}\n\n\nFactory::pushProduct(new Product(''first''));\nFactory::pushProduct(new Product(''second''));\n\nprint_r(Factory::getProduct(''first'')->getId());\n// first\nprint_r(Factory::getProduct(''second'')->getId());\n// second\nPrototype\n\nSometime, some objects should be initialized multiple times. It makes sense to save on their initialization, especially if initialization requires time and resources. Prototype – a pre-initialized and saved object. If necessary, it could be cloned:\n\n<?php\n\ninterface Product {\n}\n\nclass Factory {\n\n    private $product;\n\n    public function __construct(Product $product) {\n        $this->product = $product;\n    }\n\n    public function getProduct() {\n        return clone $this->product;\n    }\n}\n\nclass SomeProduct implements Product {\n    public $name;\n}\n\n\n$prototypeFactory = new Factory(new SomeProduct());\n\n$firstProduct = $prototypeFactory->getProduct();\n$firstProduct->name = ''The first product'';\n\n$secondProduct = $prototypeFactory->getProduct();\n$secondProduct->name = ''Second product'';\n\nprint_r($firstProduct->name);\n// The first product\nprint_r($secondProduct->name);\n// Second product\nBuilder\n\nThis template is used when we want to encapsulate the creation of a complex object:\n\n<?php\n\nclass Product {\n\n    private $name;\n\n    public function setName($name) {\n        $this->name = $name;\n    }\n\n    public function getName() {\n        return $this->name;\n    }\n}\n\nabstract class Builder {\n\n    protected $product;\n\n    final public function getProduct() {\n        return $this->product;\n    }\n\n    public function buildProduct() {\n        $this->product = new Product();\n    }\n}\n\nclass FirstBuilder extends Builder {\n\n    public function buildProduct() {\n        parent::buildProduct();\n        $this->product->setName(''The product of the first builder'');\n    }\n}\n\nclass SecondBuilder extends Builder {\n\n    public function buildProduct() {\n        parent::buildProduct();\n        $this->product->setName(''The product of second builder'');\n    }\n}\n\nclass Factory {\n\n    private $builder;\n\n    public function __construct(Builder $builder) {\n        $this->builder = $builder;\n        $this->builder->buildProduct();\n    }\n\n    public function getProduct() {\n        return $this->builder->getProduct();\n    }\n}\n\n$firstDirector = new Factory(new FirstBuilder());\n$secondDirector = new Factory(new SecondBuilder());\n\nprint_r($firstDirector->getProduct()->getName());\n// The product of the first builder\nprint_r($secondDirector->getProduct()->getName());\n// The product of second builder\n\n\nThanks you for reading.', '', 'design,patterns', 1413849890, 'yes', 3, 2, '2014-10-20 10:15:29', 'yudipurw@localhost'),
(18, 1, 'Menampilkan List Repository dengan Api Github', 'menampilkan-List-repository-dengan-api-github', '<p>Menampilkan list repository digithub dengan memanfaatkan api dari github, sempat diskusi dengan salah satu master bernama SundiTreeyansyah yang membahas microsoft.github.io, dialamat microsoft.github.io bagaimana dia menampilkan repo githubnya, pastinya dengan API atau manual   namun tidak kalau manual ..hihi</p>\r\n<p>\r\nOke langsung kita bahas saja bagaimana cara mengambil repo digithub, ditutorial simple ini hanya memanfaatkan curl . apa curl itu ?? bisa browsing digoogle ya!</p>\r\n<p>Pertama buat sebuah file dengan nama curl.php </p>\r\n\r\n<pre data-pbcklang="php" data-pbcktabsize="4">\r\n<code class="language-php ">\r\n<?php\r\n  // for example your user\r\n  $user = ''zhiephie'';\r\n\r\n  // A token that you could generate from your own github \r\n  // go here https://github.com/settings/applications and create a token\r\n  // then replace the next string\r\n  $token = ''d68d062eaf1de6bb1742b668d6236490e9f765db'';\r\n\r\n  // We generate the url for curl\r\n  $curl_url = ''https://api.github.com/users/'' . $user . ''/repos'';\r\n\r\n  // We generate the header part for the token\r\n  $curl_token_auth = ''Authorization: token '' . $token;\r\n\r\n  // We make the actuall curl initialization\r\n  $ch = curl_init($curl_url);\r\n\r\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n\r\n  // We set the right headers: any user agent type, and then the custom token header part that we generated\r\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(''User-Agent: Awesome-Octocat-App'', $curl_token_auth));\r\n\r\n  // We execute the curl\r\n  $output = curl_exec($ch);\r\n\r\n  // And we make sure we close the curl       \r\n  curl_close($ch);\r\n\r\n  // Then we decode the output and we could do whatever we want with it\r\n  $output = json_decode($output);\r\n\r\n   // if (!empty($output)) {\r\n    // now you could just foreach the repos and show them\r\n    // foreach ($output as $repo) {\r\n      // print ''<a href="'' . $repo->html_url . ''"> '' . $repo->name . '' </a> '' . $repo->stargazers_count . '' stars '' . $repo->forks_count . '' forks<br />'';\r\n    // }\r\n  // }\r\n\r\n\r\n?>\r\n</code></pre>\r\n<p>Lalu untuk menampilkan data yang kita ambil dari curl itu cukup dengan code dibawah ini </p>\r\n<pre data-pbcklang="php" data-pbcktabsize="4">\r\n<code class="language-php ">\r\n<?php require_once(''curl.php''); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Timex Studio on GitHub</title>\r\n    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css"/>\r\n    <link rel="stylesheet" href="css/main.css"/>\r\n    <link rel="stylesheet" href="css/mscom.css"/>\r\n    <link rel="stylesheet" href="css/site.css"/>\r\n</head>\r\n\r\n<body>\r\n    <div class="row-fluid" data-view4="1" data-view3="1" data-view2="1" data-view1="1" data-cols="1">\r\n        <div class="span bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-1 sortable-control" >\r\n            <div id="ctl00_HeaderControl" class="CSPvNext CMSvNextComp mscom-header">\r\n                <div id="ctl00_HeaderControlGrid" >\r\n                    <div class="row-fluid mscom-container-maxwidth mscom-grid-container mscom-fullwidth-view-1">\r\n                        <div class="row-fluid mscom-header-row-0" data-view4="1" data-view3="1" data-view2="1" data-view1="1" data-cols="1">\r\n                            <div class="span bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-0 mscom-textalign-right mscom-header-storelink-section-topbar"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="row-fluid mscom-container-maxwidth mscom-grid-container">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="row-fluid dlc-body" data-cols="1" data-view1="1" data-view2="1"\r\n         data-view3="1" data-view4="1">\r\n        <div class="span bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-1 sortable-control">\r\n            <div class="main-content">     \r\n                <div class="all-projects">\r\n                    <h3>All Repo</h3>\r\n                    <div class="row">\r\n					<?php if (!empty($output)) { foreach ($output as $repo) { ?>\r\n                        <div class="col-md-4 col-md-offset-0 col-xs-6 col-xs-offset-0">\r\n                            <div class="panel panel-default">\r\n                                    <div class="panel-heading">\r\n                                        <a href="<?php echo $repo->html_url; ?>">\r\n                                            <div class="panel-title-area"><?php echo $repo->name; ?></div>\r\n                                        </a>\r\n                                    </div>\r\n                                <div class="panel-body description"><span><?php echo $repo->description; ?></span></div>\r\n                                <div class="panel-body">\r\n                                    <div class="row">\r\n                                        <div class="center">\r\n                                            <span class="span-stars-group"><?php echo $repo->stargazers_count; ?><span class="glyphicon glyphicon-star"></span>stars</span>\r\n                                            <span class="span-forks-group"><?php echo $repo->forks_count; ?><span class="glyphicon glyphicon-random"></span>forks</span>\r\n		\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n						<?php } } ?>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <footer style="">\r\n        <div class="row-fluid" data-cols="1" data-view1="1" data-view2="1" data-view3="1"\r\n         data-view4="1">\r\n            <div class="span bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-1 sortable-control">\r\n                <div>\r\n\r\n                    <div class="CSPvNext CMSvNextComp mscom-footer mscom-footer2"  >\r\n                        <div class="row-fluid mscom-footer-row-3 mscom-container-maxwidth mscom-grid-container mscom-grid-container"\r\n                             data-cols="1" data-view1="1" data-view2="1" data-view3="1" data-view4="1">\r\n                            <div class="span  bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-1 mscom-footer-defaultlink">\r\n                                <div class="container">\r\n                                    <div class="row">\r\n                                        <div class="credits">This open sourced site is <a href="https://github.com/" target="_blank">hosted on GitHub</a>. Patches, suggestions and comments are welcome. \r\n                                        Built with love... and  <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a>, <a href="http://pages.github.com/" target="_blank">GitHub Pages</a>, and <a href="http://developer.github.com/v3/" target="_blank">API</a>.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class="CSPvNext CMSvNextComp mscom-footer mscom-footer2"  >\r\n                        <div class="row-fluid mscom-footer-row-3 mscom-container-maxwidth mscom-grid-container mscom-grid-container"\r\n                             data-cols="1" data-view1="1" data-view2="1" data-view3="1" data-view4="1">\r\n                            <div class="span  bp0-col-1-1 bp1-col-1-1 bp2-col-1-1 bp3-col-1-1 mscom-footer-defaultlink">\r\n                                <div class="container">\r\n                                    <div class="row">\r\n                                        <div class="col-md-6" style="height:40px;position:relative;">\r\n\r\n                                        </div>\r\n                                        <div class="col-md-6" style="height:40px; position:relative;">\r\n                                            <div style="bottom:0;right:0; width:100%;">\r\n                                                <div class="list2" style="text-align: right;">\r\n                                                    <ul style="list-style-type: none;">\r\n                                                        <li style="margin-left:25px;">&copy; 2014 Yudi Purwanto</li>\r\n                                                    </ul>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n    \r\n    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>\r\n    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>\r\n    <script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.2.0.js"></script>\r\n</body>\r\n</html>\r\n</code></pre>\r\n\r\n<p>Screen shot http://prntscr.com/58la0i\r\n</p>\r\n<p>Done. Untuk download clone https://github.com/GitHubIndonesia/list-repository </p>', 'github1.jpg', 'github,api', 1413851601, 'yes', 1, 2, '2014-11-22 04:32:59', 'yudipurw@localhost');

--
-- Constraints for dumped tables
--

--
-- Constraints for table `project`
--
ALTER TABLE `project`
  ADD CONSTRAINT `category_fk` FOREIGN KEY (`idcategory`) REFERENCES `category` (`idcategory`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `tutorial`
--
ALTER TABLE `tutorial`
  ADD CONSTRAINT `fk_tutorial_1` FOREIGN KEY (`id_category`) REFERENCES `categorytutorial` (`idcategorytutorial`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
